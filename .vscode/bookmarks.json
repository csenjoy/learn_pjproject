{
	"files": [
		{
			"path": "pjsip-apps/src/pjsua/main.c",
			"bookmarks": [
				{
					"line": 41,
					"column": 2,
					"label": "pjsua_app退出触发on_app_stopped回调，回调处理是否重启pjsua_app标志位running"
				},
				{
					"line": 62,
					"column": 0,
					"label": "receive_end_sig设置调用pjsua_app_destroy使pjsua_app_run能够返回"
				},
				{
					"line": 98,
					"column": 2,
					"label": "pjsua_app_cfg_t注册pjsua_app启动/停止回调函数"
				},
				{
					"line": 103,
					"column": 1,
					"label": "setup_signal_handler()注册singal处理函数"
				},
				{
					"line": 106,
					"column": 2,
					"label": "runing标志位判断是否退出应用，否则重启pjsua_app"
				},
				{
					"line": 128,
					"column": 2,
					"label": "pj_run_app接口调用main_func前处理逻辑（相当于模板方法）"
				}
			]
		},
		{
			"path": "pjsip-apps/src/pjsua/pjsua_app.h",
			"bookmarks": [
				{
					"line": 70,
					"column": 0,
					"label": "pjsua_app接口定义"
				}
			]
		},
		{
			"path": "pjsip-apps/src/pjsua/pjsua_app.c",
			"bookmarks": [
				{
					"line": 19,
					"column": 1,
					"label": "app_config: 处理app_config接口相关数据"
				},
				{
					"line": 1228,
					"column": 3,
					"label": "app_init: 私有函数called by pjsua_app_init"
				},
				{
					"line": 1237,
					"column": 2,
					"label": "app_init: 1.pjsua_create() 创建pjsua"
				},
				{
					"line": 1242,
					"column": 2,
					"label": "app_init: 2.pjsua_pool_create() called"
				},
				{
					"line": 1246,
					"column": 1,
					"label": "app_init: 3.初始化pjsua_app_config的cli_cfg（包含console/telnet）注册telnet on_started回调函数"
				},
				{
					"line": 1254,
					"column": 3,
					"label": "app_init: 4.解析pjsua_app_cfg_t中保存的命令行参数（用户传递进来的）"
				},
				{
					"line": 1261,
					"column": 1,
					"label": "app_init: 5.注册app_config中关于pjsua_config的回调处理函数"
				},
				{
					"line": 1284,
					"column": 1,
					"label": "app_init: 6.设置Sound Device latency 播放延迟/采集延迟"
				},
				{
					"line": 1290,
					"column": 1,
					"label": "app_init: 7.pjsua_app_cfg_t设置的初始化回调函数，用来自定义pjsua_app_config配置"
				},
				{
					"line": 1294,
					"column": 0,
					"label": "app_init: 8.pjsua_init() called"
				},
				{
					"line": 1302,
					"column": 0,
					"label": "app_init: 9.注册mod_default_handler  pjsip_module处理request"
				},
				{
					"line": 1312,
					"column": 1,
					"label": "app_init: 10.初始化app_config中的call_data数组"
				},
				{
					"line": 1318,
					"column": 2,
					"label": "app_int: 11.注册Wav file play media port （play streams from wave file)"
				},
				{
					"line": 1349,
					"column": 1,
					"label": "app_int: 12.注册tone players"
				},
				{
					"line": 1376,
					"column": 1,
					"label": "app_init: 13.创建recorder media port 并且添加到conference bridge"
				},
				{
					"line": 1397,
					"column": 0,
					"label": "app_init: 14. 创建ringback tone media port"
				},
				{
					"line": 1427,
					"column": 0,
					"label": "app_init: 15.创建Ring media port"
				},
				{
					"line": 1455,
					"column": 1,
					"label": "app_int: 16.创建avi player virtual devices"
				},
				{
					"line": 1460,
					"column": 17,
					"label": "app_init: 16.pjmedia_avi_dev_create_factory"
				},
				{
					"line": 1476,
					"column": 14,
					"label": "app_init: 16.pjmedia_avi_dev_param_default() "
				},
				{
					"line": 1479,
					"column": 14,
					"label": "app_init: 16.pjmedia_avi_dev_alloc(avi_factory, &avdp, &avid)"
				},
				{
					"line": 1494,
					"column": 51,
					"label": "app_init: 16.pjmedia_avi_streams_get_num_streams() called"
				},
				{
					"line": 1501,
					"column": 38,
					"label": "app_init: 16.pjmedia_avi_streams_get_stream"
				},
				{
					"line": 1532,
					"column": 3,
					"label": "app_init: 17.pjsua_transport_create() called"
				},
				{
					"line": 1612,
					"column": 1,
					"label": "app_int: 18.pjsua_transport_create() 创建TCP transport"
				},
				{
					"line": 1672,
					"column": 2,
					"label": "app_int: 19.pjsua_transport_create()创建TLS transport"
				},
				{
					"line": 1747,
					"column": 2,
					"label": "app_int: 20. 添加Accounts"
				},
				{
					"line": 1761,
					"column": 1,
					"label": "app_init: 21.添加Buddies"
				},
				{
					"line": 1770,
					"column": 1,
					"label": "app_init: 22.禁用某些编解码器"
				},
				{
					"line": 1780,
					"column": 3,
					"label": "app_init: 23.设置编解码器优先级"
				},
				{
					"line": 1808,
					"column": 1,
					"label": "app_init: 24.初始化call setting"
				},
				{
					"line": 1821,
					"column": 6,
					"label": "pjsua_app_init接口实现"
				},
				{
					"line": 1826,
					"column": 1,
					"label": "pjsua_app_int: 1.app_init() called"
				},
				{
					"line": 1832,
					"column": 0,
					"label": "pjsua_app_int: 2.cli_init() called by pjsua_app_init初始化控制台输入"
				},
				{
					"line": 1837,
					"column": 12,
					"label": "pjsua_app_run: 函数定义"
				},
				{
					"line": 1844,
					"column": 0,
					"label": "pjsua_app_run: 1.创建stdout刷新线程"
				},
				{
					"line": 1848,
					"column": 3,
					"label": "pjsua_app_run: 2.pjsua_start调用"
				},
				{
					"line": 1852,
					"column": 1,
					"label": "pjsua_app_run: 3.app_cfg.on_started回调触发"
				},
				{
					"line": 1865,
					"column": 1,
					"label": "pjsua_app_run: 4.如果指定URI 则调用pjsua_call_make_calll"
				},
				{
					"line": 1877,
					"column": 0,
					"label": "pjsua_app_run: 5.cli_main被调用指定app_config.use_cli"
				},
				{
					"line": 1879,
					"column": 0,
					"label": "pjsua_app_run: 6.legacy_main被调用未指定app_config.use_cli"
				}
			]
		},
		{
			"path": "pjsip-apps/src/pjsua/pjsua_app_common.h",
			"bookmarks": [
				{
					"line": 72,
					"column": 6,
					"label": "struct pjsua_app_config: pjsua appllication data结构体声明"
				}
			]
		},
		{
			"path": "pjsip-apps/src/pjsua/pjsua_app_common.c",
			"bookmarks": [
				{
					"line": 40,
					"column": 1,
					"label": "app_config: pjsua application data 定义"
				}
			]
		},
		{
			"path": "pjsip/src/pjsua-lib/pjsua_aud.c",
			"bookmarks": [
				{
					"line": 229,
					"column": 30,
					"label": "pjsua_aud_subsys_init: Function Definition"
				},
				{
					"line": 1087,
					"column": 3,
					"label": "pjsua_player_create: 创建一个file player media port (get fram from file player) 并添加到conference bridge"
				},
				{
					"line": 1128,
					"column": 1,
					"label": "pjsua_player_create: 1.创建pjmedia_wav_player_port（play streams from wav file）"
				},
				{
					"line": 1139,
					"column": 3,
					"label": "pjsua_player_create: 2. 添加wav file player media port 到pjmedia_conf中"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/conference.c",
			"bookmarks": [
				{
					"line": 230,
					"column": 7,
					"label": "struct pjmedia_conf: Conference bridge结构体声明"
				},
				{
					"line": 750,
					"column": 1,
					"label": "pjmedia_conf_add_port: 添加stream port到conference bridge"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/wav_player.c",
			"bookmarks": [
				{
					"line": 55,
					"column": 18,
					"label": "struct file_reader_port: Struct Definition(Inherit pjmedia_port)"
				},
				{
					"line": 74,
					"column": 3,
					"label": "file_reader_port::cb: file read eof callback "
				},
				{
					"line": 82,
					"column": 36,
					"label": "create_file_port: Function Definition"
				},
				{
					"line": 107,
					"column": 26,
					"label": "fill_buffer: Function Definition"
				},
				{
					"line": 180,
					"column": 2,
					"label": "pjmedia_wav_player_port_create: 函数定义"
				},
				{
					"line": 201,
					"column": 27,
					"label": "pjmedia_wav_player_port_create: 1.pj_file_exists(filename) false to return PJ_ENOTFOUND"
				},
				{
					"line": 214,
					"column": 2,
					"label": "pjmedia_wav_player_port_create: 2.fport = create_file_port(pool)"
				},
				{
					"line": 221,
					"column": 14,
					"label": "pjmedia_wav_player_port_create: 3.fport->fsize = pj_file_size(filename)"
				},
				{
					"line": 224,
					"column": 25,
					"label": "pjmedia_wav_player_port_create: 4.fport->fsize <= sizeof(pjmedia_wave_hdr) return PJMEDIA_ENOTVALIDWAVE"
				},
				{
					"line": 229,
					"column": 1,
					"label": "pjmedia_wav_player_port_create: 5.pj_file_open(pool, filename, PJ_O_RDONLY, &fport->fd)"
				},
				{
					"line": 235,
					"column": 18,
					"label": "pjmedia_wav_player_port_create: 6.pj_file_read(fport->fd, &wave_hdr, &size_read)"
				},
				{
					"line": 248,
					"column": 20,
					"label": "pjmedia_wav_player_port_create: 7.pjmedia_wave_hdr_file_to_host(&wave_hdr)"
				},
				{
					"line": 251,
					"column": 1,
					"label": "pjmedia_wav_player_port_create: 8.wave_hdr.riff_hdr.riff  wave_hdr.riff_hdr.wave and wave_hdr.fmt_hdr.fmt "
				},
				{
					"line": 265,
					"column": 4,
					"label": "pjmedia_wav_player_port_create: 9.check bits_per_sample and block_align for PCM ALAW ULAW"
				},
				{
					"line": 298,
					"column": 13,
					"label": "pjmedia_wav_player_port_create: 10.pj_file_setpos(fport->fd, size_to_read, PJ_SEEK_CUR) skip if wave_hdr.fmt_hdr.len > 16"
				},
				{
					"line": 309,
					"column": 17,
					"label": "pjmedia_wav_player_port_create: 11.pj_file_read(fport->fd, &subchunk, size_read) in Loop"
				},
				{
					"line": 316,
					"column": 0,
					"label": "pjmedia_wav_player_port_create: 12.PJMEDIA_WAVE_NORMALIZE_SUBCHUNK(&subchunk) in Loop"
				},
				{
					"line": 321,
					"column": 6,
					"label": "pjmedia_wav_player_port_create: 13.wave_hdr.data_hdr.data = PJMEDIA_DATA_TAG wave_hdr.data_hdr.len = subchunk.len break Loop"
				},
				{
					"line": 327,
					"column": 0,
					"label": "pjmedia_wav_player_port_create: 14.pj_file_setpos(fport->fd, size_to_read, PJ_SEEK_CUR) in Loop"
				},
				{
					"line": 338,
					"column": 18,
					"label": "pjmedia_wav_player_port_create: 15.fport->start_data = pos; fport->data_len = wave_hdr.data_hdr.len; fport->data_left = wave_hdr.data_hdr.len"
				},
				{
					"line": 341,
					"column": 0,
					"label": "pjmedia_wav_player_port_create: 16.if wave_hdr.data_hdr.len > fport->fsize - fport->start_data return PJMEDIA_EWAVEUNSUPP"
				},
				{
					"line": 345,
					"column": 14,
					"label": "pjmedia_wav_player_port_create: 17.if wave_hdr.data_hdr.len < ptime * sample_rate * nchan / 1000 return PJMEDIA_EWAVETOOSHORT"
				},
				{
					"line": 362,
					"column": 26,
					"label": "pjmedia_wav_player_port_create: 18.pjmedia_port_info_init(&fport->base.info, &name, SIGNATURE, sample_rate, nchan, BITS_PER_SAMPLE, samples_per_frame)"
				},
				{
					"line": 373,
					"column": 15,
					"label": "pjmedia_wav_player_port_create: 19.buff_size = wave_hdr.data_hdr.len if buffer_size > data_hdr.len"
				},
				{
					"line": 383,
					"column": 2,
					"label": "pjmedia_wav_player_port_create: 20. samples_per_frame * bytes_per_sample >= fport_bufsize return PJ_EINVAL"
				},
				{
					"line": 389,
					"column": 20,
					"label": "pjmedia_wav_player_port_create: 21.fport->buf = pj_pool_alloc(pool, fport->bufsize)"
				},
				{
					"line": 398,
					"column": 2,
					"label": "pjmedia_wav_player_port_create: 22.fport->readpos = fport->buf; fport->fpos = fport->start_data"
				},
				{
					"line": 401,
					"column": 2,
					"label": "pjmedia_wav_player_port_create: 23.fill_buffer(fport)"
				},
				{
					"line": 409,
					"column": 1,
					"label": "pjmedia_wav_player_port_create: 24.*p_port = &fport_base"
				},
				{
					"line": 552,
					"column": 44,
					"label": "pjmedia_wav_player_set_eof_cb: Function Definition"
				},
				{
					"line": 577,
					"column": 26,
					"label": "file_get_frame: Function Definition(Override pjmedia_port::get_frame)"
				},
				{
					"line": 588,
					"column": 0,
					"label": "file_get_frame: 1.file_reader_port::eof && file_reader_port::readpos >= file_reader_port::eofpos"
				},
				{
					"line": 595,
					"column": 0,
					"label": "file_get_frame: 2.file_reader_port::cb(this_port, fport->base.port_data.pdata) called if fport->cb"
				},
				{
					"line": 611,
					"column": 0,
					"label": "file_get_frame: 3.file_reader_port::eof = PJ_FALSE check cb return value for rewinding"
				},
				{
					"line": 634,
					"column": 6,
					"label": "file_get_frame: 4.pj_memcpy(frame->buf, fport->readpos, frame_size) to read contiguous buffer"
				},
				{
					"line": 641,
					"column": 3,
					"label": "file_get_frame: 5.fill_buffer(fport) if fport->readpos == fport->buf + fport->bufsize"
				},
				{
					"line": 717,
					"column": 24,
					"label": "file_on_destroy: Function Definition(Override pjmedia_port::on_destroy)"
				}
			]
		},
		{
			"path": "pjsip/src/pjsua-lib/pjsua_core.c",
			"bookmarks": [
				{
					"line": 33,
					"column": 16,
					"label": "struct pjsua_data: 定义pjsua_var"
				},
				{
					"line": 758,
					"column": 22,
					"label": "worker_thread: 函数定义"
				},
				{
					"line": 767,
					"column": 1,
					"label": "worker_thread: 1.pjsua_handle_events in loop"
				},
				{
					"line": 872,
					"column": 19,
					"label": "pjsua_create: 函数定义 Instantiate pjsua application"
				},
				{
					"line": 877,
					"column": 3,
					"label": "pjsua_create: 1.Init pjsua data"
				},
				{
					"line": 883,
					"column": 3,
					"label": "pjsua_create: 2.pj_init() called"
				},
				{
					"line": 889,
					"column": 3,
					"label": "pjsua_create: 3.Init random seed"
				},
				{
					"line": 892,
					"column": 1,
					"label": "pjsua_create: 4.pjlib_util_init() called"
				},
				{
					"line": 901,
					"column": 3,
					"label": "pjsua_create: 5.pjnath_init() called"
				},
				{
					"line": 918,
					"column": 3,
					"label": "pjsua_create: 6.pj_caching_pool_init and pjsua_pool_create"
				},
				{
					"line": 943,
					"column": 1,
					"label": "pjsua_create: 7.pjsip_endpt_create() called"
				},
				{
					"line": 957,
					"column": 1,
					"label": "pjsua_create: 8. pjsua_var.timer_list init and create pjsua_var.timer_mutex"
				},
				{
					"line": 977,
					"column": 19,
					"label": "pjsua_init: 函数定义"
				},
				{
					"line": 992,
					"column": 3,
					"label": "pjsua_init: 1.Create defaul pjsua configurations when the config is not supplied."
				},
				{
					"line": 1003,
					"column": 2,
					"label": "pjsua_init: 2.Initialize logging configurations so that info/errors can be captured"
				},
				{
					"line": 1026,
					"column": 11,
					"label": "pjsua_init: 3.Create DNS resolver"
				},
				{
					"line": 1034,
					"column": 18,
					"label": "pjsua_init: 4.Configure namespaceserver for the DNS resolver"
				},
				{
					"line": 1043,
					"column": 0,
					"label": "pjsua_init: 5.Set DNS resolver to be used by the SIP resolver"
				},
				{
					"line": 1064,
					"column": 10,
					"label": "pjsua_init: 6.Initialize transaction layer"
				},
				{
					"line": 1069,
					"column": 3,
					"label": "pjsua_init: 7.Initialize UA layer module"
				},
				{
					"line": 1078,
					"column": 3,
					"label": "pjsua_init: 8.Initialize Replaces support"
				},
				{
					"line": 1082,
					"column": 3,
					"label": "pjsua_init: 9.Initialize 100rel support"
				},
				{
					"line": 1086,
					"column": 3,
					"label": "pjsua_init: 10.Initialize session timer support"
				},
				{
					"line": 1089,
					"column": 0,
					"label": "pjsua_init: 11.Initialize and register PJSUA application module"
				},
				{
					"line": 1115,
					"column": 2,
					"label": "pjsua_init: 12.Parse outbound proxies"
				},
				{
					"line": 1149,
					"column": 2,
					"label": "pjsua_init: 13.pjsua_call_subsys_init() called for Initialize PJSUA call subsystem"
				},
				{
					"line": 1166,
					"column": 3,
					"label": "pjsua_init: 14.resolve_stun_server() called for Start resolving STUN server"
				},
				{
					"line": 1173,
					"column": 3,
					"label": "pjsua_init: 15.pjsua_media_subsys_init() called for Initialize PJSUA media subsystem"
				},
				{
					"line": 1179,
					"column": 2,
					"label": "pjsua_init: 16.pjsip_evsub_init_module() called"
				},
				{
					"line": 1184,
					"column": 4,
					"label": "pjsua_init: 17.pjsip_pres_init_module() called"
				},
				{
					"line": 1188,
					"column": 3,
					"label": "pjsua_init: 18.pjsip_mwi_init_module() called"
				},
				{
					"line": 1191,
					"column": 3,
					"label": "pjsua_inti: 19.pjsip_publishc_init_module() called."
				},
				{
					"line": 1194,
					"column": 4,
					"label": "pjsua_init: 20.pjsip_xfer_init_module"
				},
				{
					"line": 1198,
					"column": 3,
					"label": "pjsua_init: 21.pjsua_pres_init() called"
				},
				{
					"line": 1203,
					"column": 2,
					"label": "pjsua_init: 22.pjsua_im_init() called"
				},
				{
					"line": 1208,
					"column": 3,
					"label": "pjsua_init: 23.pjsua_options_hander module register to pjsua_var.endpt"
				},
				{
					"line": 1211,
					"column": 2,
					"label": "pjsua_init: 24.pjsip_endpt_add_capability of Allow header"
				},
				{
					"line": 1242,
					"column": 0,
					"label": "pjsua_init: 25.worker_thread create by  pjsua application "
				},
				{
					"line": 2117,
					"column": 22,
					"label": "pjsua_handle_events: 函数定义"
				},
				{
					"line": 2133,
					"column": 26,
					"label": "pjsua_handle_events: 1. pjsip_endpt_handle_events2() called"
				},
				{
					"line": 2237,
					"column": 19,
					"label": "create_sip_udp_sock: 函数定义"
				},
				{
					"line": 2249,
					"column": 1,
					"label": "create_sip_udp_sock: 1.resolve_stun_server解析stun server"
				},
				{
					"line": 2406,
					"column": 20,
					"label": "pjsua_transport_create: 创建SIP transport"
				},
				{
					"line": 2416,
					"column": 1,
					"label": "pjsua_transport_create: 1.Find empty transport slot in pjsua_var.tpdata[id]"
				},
				{
					"line": 2446,
					"column": 0,
					"label": "pjsua_transport_create: 2.pj_sockaddr_init 初始化public address from config"
				},
				{
					"line": 2462,
					"column": 0,
					"label": "pjsua_transport_create: 3.create_sip_udp_sock创建socket并且解析public address with STUN"
				},
				{
					"line": 2472,
					"column": 0,
					"label": "pjsua_transport_create: 4.pjsip_udp_transport_attach2() called"
				}
			]
		},
		{
			"path": "pjsip-apps/src/pjsua/pjsua_app_cli.c",
			"bookmarks": [
				{
					"line": 241,
					"column": 14,
					"label": "cli_main: 函数定义"
				}
			]
		},
		{
			"path": "pjsip-apps/src/pjsua/pjsua_app_legacy.c",
			"bookmarks": [
				{
					"line": 1678,
					"column": 4,
					"label": "legacy_main: 函数定义"
				}
			]
		},
		{
			"path": "pjsip/include/pjsua-lib/pjsua_internal.h",
			"bookmarks": [
				{
					"line": 39,
					"column": 21,
					"label": "struct pjsua_call_media: Struct Definition"
				},
				{
					"line": 122,
					"column": 11,
					"label": "struct pjsua_call: Struct Definition"
				},
				{
					"line": 423,
					"column": 14,
					"label": "struct pjsua_data: 结构体声明"
				}
			]
		},
		{
			"path": "pjsip/src/pjsip/sip_endpoint.c",
			"bookmarks": [
				{
					"line": 55,
					"column": 16,
					"label": "struct pjsip_endpoint: 结构体声明"
				},
				{
					"line": 698,
					"column": 27,
					"label": "pjsip_endpt_handle_events2: 函数定义"
				},
				{
					"line": 713,
					"column": 1,
					"label": "pjsip_endpt_handle_events2: 1.pj_timer_heap_poll() called for timeout event"
				},
				{
					"line": 743,
					"column": 0,
					"label": "pjsip_endpt_handle_events2: 2.pj_ioqueue_poll() called for network event"
				}
			]
		},
		{
			"path": "pjsip/src/pjsua-lib/pjsua_media.c",
			"bookmarks": [
				{
					"line": 44,
					"column": 5,
					"label": "pjsua_media_subsys_init: 函数声明"
				},
				{
					"line": 614,
					"column": 42,
					"label": "create_udp_media_transport: Function Definition"
				},
				{
					"line": 620,
					"column": 11,
					"label": "create_udp_media_transport: 1.create_rtp_rtcp_sock(call_med, cfg, &skinfo)"
				},
				{
					"line": 627,
					"column": 20,
					"label": "create_udp_media_transport: 2.pjmedia_transport_udp_attach(med_endpt, NULL, &skinfo, 0, &tp)"
				},
				{
					"line": 1688,
					"column": 28,
					"label": "pjsua_call_media_init: Function Definition"
				},
				{
					"line": 1742,
					"column": 23,
					"label": "pjsua_call_media_init: .create_udp_media_transport"
				},
				{
					"line": 1924,
					"column": 24,
					"label": "pjsua_media_channel_init: Function Definition"
				},
				{
					"line": 2184,
					"column": 24,
					"label": "pjsua_media_channel_init: .pjsua_call_media_init"
				}
			]
		},
		{
			"path": "pjsip/src/pjsip/sip_transport_udp.c",
			"bookmarks": [
				{
					"line": 69,
					"column": 12,
					"label": "struct udp_transport: 结构体声明 （继承pjsip_transport）"
				},
				{
					"line": 674,
					"column": 21,
					"label": "register_to_ioqueue: 函数定义"
				},
				{
					"line": 685,
					"column": 10,
					"label": "register_to_ioqueue: 1.pj_grp_lock_create() called创建udp_transport::grp_lock"
				},
				{
					"line": 696,
					"column": 2,
					"label": "register_to_ioqueue: 2.udp_on_read_complete/udp_on_wirte_complete 注册pj_ioqueue_callback_t"
				},
				{
					"line": 701,
					"column": 4,
					"label": "register_to_ioqueue: 3.pj_ioqueue_register_sock2() called"
				},
				{
					"line": 706,
					"column": 11,
					"label": "start_async_read: 函数定义"
				},
				{
					"line": 712,
					"column": 1,
					"label": "start_async_read: 1.udp_transport::rdata_cnt for loop async recvfrom"
				},
				{
					"line": 717,
					"column": 0,
					"label": "start_async_read: 2.pj_ioqueue_recvfrom() called"
				},
				{
					"line": 742,
					"column": 18,
					"label": "transport_attach: 函数定义"
				},
				{
					"line": 775,
					"column": 1,
					"label": "transport_attach: 1.pjsip_endpt_create_pool() called 创建pool"
				},
				{
					"line": 838,
					"column": 3,
					"label": "transport_attach: 2.udp_set_socket() called. set sock to udp_transport"
				},
				{
					"line": 841,
					"column": 6,
					"label": "transport_attach: 3.register_to_ioqueue() called"
				},
				{
					"line": 846,
					"column": 2,
					"label": "transport_attach: 4.udp_send_msg/udp_shutdown/udp_destroy callback function register"
				},
				{
					"line": 857,
					"column": 1,
					"label": "transport_attach: 5.pjsip_transport_register() called 注册udp_transport到sip_endpoint的tpmgr"
				},
				{
					"line": 864,
					"column": 2,
					"label": "transport_attach: 6.pjsip_rx_data create for udp_transport"
				},
				{
					"line": 883,
					"column": 3,
					"label": "transport_attach: 7.start_async_read() called 发起一次异步读"
				},
				{
					"line": 920,
					"column": 27,
					"label": "pjsip_udp_transport_attach2: 函数定义"
				},
				{
					"line": 927,
					"column": 24,
					"label": "pjsip_udp_transport_attach2: 1.transport_attach() called."
				}
			]
		},
		{
			"path": "pjlib/src/pj/timer.c",
			"bookmarks": [
				{
					"line": 608,
					"column": 35,
					"label": "pj_timer_heap_poll: 函数定义"
				}
			]
		},
		{
			"path": "pjlib/src/pj/log.c",
			"bookmarks": [
				{
					"line": 148,
					"column": 14,
					"label": "pj_log_init: 函数定义"
				},
				{
					"line": 153,
					"column": 0,
					"label": "pj_log_init: 1.alloc thread_suspended_tls_id"
				},
				{
					"line": 158,
					"column": 0,
					"label": "pj_log_init: 2. alloc thread_indent_tls_id"
				},
				{
					"line": 165,
					"column": 0,
					"label": "pj_log_init: 3.pj_atexit注册logging_shutdown函数"
				}
			]
		},
		{
			"path": "pjlib/src/pj/os_core_win32.c",
			"bookmarks": [
				{
					"line": 146,
					"column": 23,
					"label": "pj_init: 函数定义（win32 platform）"
				},
				{
					"line": 154,
					"column": 2,
					"label": "pj_init: 1.check if PJLIB have been initialized"
				},
				{
					"line": 160,
					"column": 2,
					"label": "pj_init: 2.Init Winsock"
				},
				{
					"line": 165,
					"column": 2,
					"label": "pj_init: 3.Init this thread's TLS who called pj_init"
				},
				{
					"line": 170,
					"column": 3,
					"label": "pj_init: 4.Init logging"
				},
				{
					"line": 181,
					"column": 2,
					"label": "pj_init: 5.Startup GUID"
				},
				{
					"line": 191,
					"column": 1,
					"label": "pj_init: 6.Startup timestamp"
				}
			]
		},
		{
			"path": "pjlib/src/pj/ioqueue_epoll.c",
			"bookmarks": [
				{
					"line": 20,
					"column": 1,
					"label": "pj_ioqueue_t: 编译时多态实现unix平台"
				},
				{
					"line": 63,
					"column": 10,
					"label": "pj_ioqueue_t: common abstraction declare"
				},
				{
					"line": 82,
					"column": 19,
					"label": "struct pj_ioqueue_t: 结构体定义"
				},
				{
					"line": 103,
					"column": 9,
					"label": "pj_ioqueue_t: common abstraction implement"
				},
				{
					"line": 123,
					"column": 37,
					"label": "pj_ioqueue_create: Function Definition"
				},
				{
					"line": 260,
					"column": 45,
					"label": "pj_ioqueue_register_sock2: 函数定义"
				},
				{
					"line": 277,
					"column": 10,
					"label": "pj_ioqueue_register_sock2: 1.pj_lock_acquire() called to lock pj_ioqueue_t::lock"
				},
				{
					"line": 287,
					"column": 2,
					"label": "pj_ioqueue_register_sock2: 2. os_ioctl() called to set socket FIONBIO"
				},
				{
					"line": 300,
					"column": 2,
					"label": "pj_ioqueue_register_sock2: 3.scan_closing_keys() called"
				},
				{
					"line": 315,
					"column": 2,
					"label": "pj_ioqueue_register_sock2: 4.ioqueue_init_key() called."
				},
				{
					"line": 331,
					"column": 2,
					"label": "pj_ioqueue_register_sock2: 5.os_epoll_ctrl() called to add sock to epoll fd"
				},
				{
					"line": 343,
					"column": 1,
					"label": "pj_ioqueue_register_sock2: 6.pj_list_insert_before() called to register the key to active_list"
				},
				{
					"line": 512,
					"column": 16,
					"label": "ioqueue_remove_from_set: 函数定义"
				},
				{
					"line": 531,
					"column": 14,
					"label": "ioqueue_add_to_set: 函数定义"
				},
				{
					"line": 540,
					"column": 0,
					"label": "ioqueue_add_to_set: 1.os_epoll_ctl() called  if event_type is WRITEABLE_EVENT"
				},
				{
					"line": 575,
					"column": 18,
					"label": "pj_ioqueue_poll: 函数定义"
				},
				{
					"line": 594,
					"column": 2,
					"label": "pj_ioqueue_poll: 1.os_epoll_wait() called"
				},
				{
					"line": 600,
					"column": 2,
					"label": "pj_ioqueue_poll: 2.scan_closing_keys（reuse key）"
				},
				{
					"line": 630,
					"column": 0,
					"label": "pj_ioqueue_poll: 3.EPOLLIN 检测读事件"
				},
				{
					"line": 636,
					"column": 0,
					"label": "pj_ioqueue_poll: 4. struct queue 保存读事件"
				},
				{
					"line": 645,
					"column": 0,
					"label": "pj_ioqueue_poll: 5.EPOLLOUT检测写事件"
				},
				{
					"line": 660,
					"column": 0,
					"label": "pj_ioqueue_poll: 6.EPOLLOUT && key->connecting 检测tcp connect事件"
				},
				{
					"line": 675,
					"column": 0,
					"label": "pj_ioqueue_poll: 7.EPOLLERR检测错误事件"
				},
				{
					"line": 715,
					"column": 0,
					"label": "pj_ioqueue_poll: 8.ioqueu_dispatch_read/write/exception_event"
				}
			]
		},
		{
			"path": "pjlib/src/pj/ioqueue_common_abs.c",
			"bookmarks": [
				{
					"line": 68,
					"column": 23,
					"label": "ioqueue_init_key: 函数定义"
				},
				{
					"line": 197,
					"column": 20,
					"label": "ioqueue_dispatch_write_event: 函数定义"
				},
				{
					"line": 214,
					"column": 1,
					"label": "ioqueue_dispatch_write_event: 1.h->connecting 检测tcp连接中"
				},
				{
					"line": 223,
					"column": 2,
					"label": "ioqueue_dispatch_write_event: 2.ioqueue_remove_from_set() call to WRITEABLE_EVENT and EXCEPTION_EVENT"
				},
				{
					"line": 236,
					"column": 0,
					"label": "ioqueue_dispatch_write_event: 3.pj_sock_getsockopt() called 检测SO_ERROR"
				},
				{
					"line": 284,
					"column": 0,
					"label": "ioqueue_dispatch_write_event: 4.h->cb.on_connect_complete 回调触发"
				},
				{
					"line": 297,
					"column": 3,
					"label": "ioqueue_dispatch_write_event: 5. key_has_pending_write() && !h->connecting called 检查是否存在写操作"
				},
				{
					"line": 309,
					"column": 5,
					"label": "ioqueue_dispatch_write_event: 6.h->fd_type == pj_SOCK_DRAM() 将write_op移除"
				},
				{
					"line": 321,
					"column": 5,
					"label": "ioqueue_dispatch_write_event: 7.write_op->op == PJ_IOQUEUE_OP_SEND pj_sock_send() called"
				},
				{
					"line": 329,
					"column": 4,
					"label": "ioqueue_dispatch_write_event: 8.write_op.op == PJ_IOQUEUE_SEND_TO retry次发送pj_sock_sendto()"
				},
				{
					"line": 363,
					"column": 1,
					"label": "ioqueue_dispatch_write_event: 9.send_rc 发送结果更新write_op->written"
				},
				{
					"line": 371,
					"column": 4,
					"label": "ioqueue_dispatch_write_event: 10.write_op处理完毕判断"
				},
				{
					"line": 403,
					"column": 0,
					"label": "ioqueue_dispatch_write_event: 11.h->cb.on_write_complete回调触发"
				},
				{
					"line": 433,
					"column": 9,
					"label": "ioqueue_dispatch_read_event: 函数定义"
				},
				{
					"line": 450,
					"column": 1,
					"label": "ioqueue_dispatch_read_event: 1.pj_list_empty(&h->accept_list) 判断是否有accept"
				},
				{
					"line": 629,
					"column": 22,
					"label": "ioqueue_dispatch_exception_event: 函数定义"
				},
				{
					"line": 777,
					"column": 20,
					"label": "pj_ioqueue_recvfrom: 函数定义"
				},
				{
					"line": 799,
					"column": 1,
					"label": "pj_ioqueue_recvfrom: 1.pj_sock_recvfrom() will be called if PJ_IOQUEUE_ALWAYS_ASYNC not set"
				},
				{
					"line": 825,
					"column": 2,
					"label": "pj_ioqueue_recvfrom: 2.struct read_operation 赋值构造"
				},
				{
					"line": 841,
					"column": 2,
					"label": "pj_ioqueue_recvfrom: 3.pj_list_insert_before() called to add read_op to read_list"
				},
				{
					"line": 842,
					"column": 1,
					"label": "pj_ioqueue_recvfrom: 4.ioqueue_add_to_set() called"
				}
			]
		},
		{
			"path": "pjlib/include/pj/ioqueue.h",
			"bookmarks": [
				{
					"line": 23,
					"column": 0,
					"label": "struct pj_ioqueue_t: 接口定义"
				},
				{
					"line": 208,
					"column": 28,
					"label": "struct pj_ioqueue_op_key_t: Struct Definition"
				},
				{
					"line": 219,
					"column": 29,
					"label": "struct pj_ioqueue_callback: Struct Definition"
				},
				{
					"line": 232,
					"column": 2,
					"label": "pj_ioqueue_callback::on_read_complete: Function Point Declare"
				},
				{
					"line": 247,
					"column": 22,
					"label": "pj_ioqueue_callback::on_write_complete: Function Point Declare"
				},
				{
					"line": 259,
					"column": 21,
					"label": "pj_ioqueue_callback::on_accept_complete: Function Point Declare"
				},
				{
					"line": 270,
					"column": 24,
					"label": "pj_ioqueue_callback::on_connect_complete: Function Point Declare"
				},
				{
					"line": 279,
					"column": 18,
					"label": "enum pj_ioqueue_operation_e: Enum Definition"
				}
			]
		},
		{
			"path": "pjlib/src/pj/ioqueue_select.c",
			"bookmarks": [
				{
					"line": 21,
					"column": 3,
					"label": "pj_ioqueue_t: 编译时多态实现window平台"
				},
				{
					"line": 54,
					"column": 3,
					"label": "pj_ioqueue_t: common abstraction declare（diferent platform common implement）"
				},
				{
					"line": 107,
					"column": 10,
					"label": "struct pj_ioqueue_t: 结构体定义"
				},
				{
					"line": 136,
					"column": 14,
					"label": "pj_ioqueue_t: common abstraction implement"
				},
				{
					"line": 182,
					"column": 30,
					"label": "pj_ioqueue_create: Function Definitino"
				},
				{
					"line": 315,
					"column": 22,
					"label": "pj_ioqueue_register_sock2: 函数定义"
				},
				{
					"line": 633,
					"column": 24,
					"label": "ioqueue_remove_from_set: 函数定义"
				},
				{
					"line": 659,
					"column": 16,
					"label": "ioqueue_add_to_set: 函数定义"
				},
				{
					"line": 914,
					"column": 16,
					"label": "pj_ioqueue_poll: 函数定义"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia-audiodev/audiodev.h",
			"bookmarks": [
				{
					"line": 51,
					"column": 44,
					"label": "pjmedia_aud_subsys_init: Function Declare"
				},
				{
					"line": 71,
					"column": 29,
					"label": "pjmedia_aud_subsys_shutdown: Function Declare"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia-audiodev/audiodev_imp.h",
			"bookmarks": [
				{
					"line": 34,
					"column": 23,
					"label": "struct pjmedia_aud_dev_factory_op: Struct Declare"
				},
				{
					"line": 107,
					"column": 30,
					"label": "struct pjmedia_aud_dev_factory: Struct Declare"
				},
				{
					"line": 116,
					"column": 2,
					"label": "pjmedia_aud_dev_factory::pjmedia_aud_dev_factory_op *op"
				},
				{
					"line": 123,
					"column": 31,
					"label": "struct pjmedia_aud_stream_op: Struct Declare"
				},
				{
					"line": 166,
					"column": 12,
					"label": "struct pjmedia_aud_stream: Struct Declare"
				},
				{
					"line": 175,
					"column": 2,
					"label": "pjmedia_aud_stream::pjmedia_aud_stream_op *op"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia/audiodev.h",
			"bookmarks": [
				{
					"line": 86,
					"column": 33,
					"label": "struct pjmedia_aud_driver: Struct Definition"
				},
				{
					"line": 88,
					"column": 2,
					"label": "pjmedia_aud_driver::pjmedia_aud_dev_factory_create_func_ptr create"
				},
				{
					"line": 89,
					"column": 2,
					"label": "pjmedia_aud_driver::pjmedia_aud_dev_factory *f"
				},
				{
					"line": 100,
					"column": 24,
					"label": "struct pjmedia_aud_subsys: Struct Definition"
				},
				{
					"line": 106,
					"column": 1,
					"label": "pjmedia_aud_subsys::pjmedia_aud_driver drv[PJMEDIA_AUD_MAX_DRIVERS]"
				},
				{
					"line": 241,
					"column": 22,
					"label": "enum pjmedia_aud_dev_route: Enum  Definition"
				},
				{
					"line": 281,
					"column": 25,
					"label": "struct pjmedia_aud_dev_info: Struct Definition"
				},
				{
					"line": 376,
					"column": 25,
					"label": "struct pjmedia_aud_param: Struct Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/audiodev.c",
			"bookmarks": [
				{
					"line": 68,
					"column": 18,
					"label": "pjmedia_aud_subsys aud_subsys: Static Value Definition"
				},
				{
					"line": 71,
					"column": 34,
					"label": "pjmedia_get_aud_subsys: Function Definition"
				},
				{
					"line": 77,
					"column": 28,
					"label": "pjmedia_aud_driver_init: Function Definition"
				},
				{
					"line": 80,
					"column": 1,
					"label": "pjmedia_aud_driver_init: 1.pjmedia_aud_driver *drv = &aud_subsys.drv[drv_idx]"
				},
				{
					"line": 87,
					"column": 18,
					"label": "pjmedia_aud_driver_init: 2.pjmedia_aud_dev_factory *f = pjmedia_aud_driver::create(aud_subsys.pf) called if !refresh && drv->create"
				},
				{
					"line": 92,
					"column": 18,
					"label": "pjmedia_aud_driver_init: 3.pjmedia_aud_dev_factory::pjmedia_aud_dev_factory_op::init(pjmedia_aud_dev_facotry *f)) called by f->op->init"
				},
				{
					"line": 94,
					"column": 9,
					"label": "pjmedia_aud_driver_init: 4.pjmedia_aud_dev_factory::pjmedia_aud_dev_factory_op::destroy(f) called by f->op->destory"
				},
				{
					"line": 98,
					"column": 6,
					"label": "pjmedia_aud_driver_init: 5.pjmedia_aud_dev_factory *f = drv->f"
				},
				{
					"line": 105,
					"column": 1,
					"label": "pjmedia_aud_driver_init: 6.dev_cnt = pjmedia_aud_dev_factory::pjmedia_aud_dev_factory_op::get_dev_count(f)"
				},
				{
					"line": 130,
					"column": 6,
					"label": "pjmedia_aud_driver_init: 7.pjmedia_aud_dev_factory::pjmedia_aud_dev_factory_op::get_dev_info(f, i, pjmedia_aud_dev_info *)"
				},
				{
					"line": 479,
					"column": 33,
					"label": "pjmedia_aud_dev_default_param: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-audiodev/wmme_dev.c",
			"bookmarks": [
				{
					"line": 71,
					"column": 17,
					"label": "struct wmme_dev_info: Struct Definition(Inherit pjmedia_aud_dev_info)"
				},
				{
					"line": 79,
					"column": 19,
					"label": "struct wmme_factory: Struct Definition(Inherit pjmedia_aud_dev_factory)"
				},
				{
					"line": 92,
					"column": 12,
					"label": "struct wmme_channel: Struct Definition"
				},
				{
					"line": 109,
					"column": 13,
					"label": "struct wmme_stream: Struct Definition(Inherit pjmedia_aud_stream)"
				},
				{
					"line": 112,
					"column": 13,
					"label": "wmme_stream::param: pjmedia_aud_param param"
				},
				{
					"line": 115,
					"column": 13,
					"label": "wmme_stream::rec_cb: pjmedia_aud_rec_cb rec_cb"
				},
				{
					"line": 116,
					"column": 13,
					"label": "wmme_stream::play_cb: pjmedia_aud_play_cb play_cb"
				},
				{
					"line": 119,
					"column": 17,
					"label": "wmme_stream::play_strm: wmme_channel play_strm"
				},
				{
					"line": 120,
					"column": 17,
					"label": "wmme_stream::rec_strm: wmme_channel rec_strm"
				},
				{
					"line": 167,
					"column": 28,
					"label": "pjmedia_aud_dev_factory_op factory_op: Static Value Definition"
				},
				{
					"line": 195,
					"column": 35,
					"label": "pjmedia_wmme_factory: Function Definition(Override pjmedia_aud_dev_factory_create_ptr)"
				},
				{
					"line": 389,
					"column": 27,
					"label": "factory_init: Function Definition(Override pjmedia_aud_dev_factory_op::init at wmme)"
				},
				{
					"line": 391,
					"column": 27,
					"label": "factory_init: 1.factory_refresh(f) called"
				},
				{
					"line": 400,
					"column": 28,
					"label": "factory_refresh: Function Definition(Override pjmedia_aud_dev_factory_op::refresh at wmme)"
				},
				{
					"line": 417,
					"column": 20,
					"label": "factory_refresh: 1.inputDeviceCount = waveInGetNumDevs() called "
				},
				{
					"line": 420,
					"column": 10,
					"label": "factory_refresh: 2.waveOutGetNumDevs() called."
				},
				{
					"line": 441,
					"column": 12,
					"label": "factory_refresh: 3.wmme_factory *wf->dev_info = pj_pool_calloc(wf->pool, devCount ,sizeof(wmme_dev_info))"
				},
				{
					"line": 576,
					"column": 23,
					"label": "factory_destroy: Function Definition(Override pjmedia_aud_dev_factory_op::destroy at wmme)"
				},
				{
					"line": 589,
					"column": 37,
					"label": "factory_get_dev_count: Function Definition(Override pjmedia_aud_dev_factory_op::get_dev_count at wmme)"
				},
				{
					"line": 596,
					"column": 33,
					"label": "factory_get_dev_info: Function Definition(Override pjmedia_aud_dev_factory_op::get_dev_info at wmme)"
				},
				{
					"line": 610,
					"column": 28,
					"label": "factory_default_param: Function Definition(Override pjmedia_aud_dev_factory_op::default_param at wmme)"
				},
				{
					"line": 708,
					"column": 30,
					"label": "init_player_stream: Function Definition"
				},
				{
					"line": 802,
					"column": 24,
					"label": "init_capture_stream: Function Definition"
				},
				{
					"line": 887,
					"column": 26,
					"label": "wmme_dev_thread: Function Definition"
				},
				{
					"line": 1175,
					"column": 40,
					"label": "factory_create_stream: Function Definition(Override pjmedia_aud_dev_factory_op::create_stream at wmme)"
				},
				{
					"line": 1188,
					"column": 0,
					"label": "factory_create_stream: 1.pjmedia_aud_param::pjmedia_format::id check param->ext_fmt.id"
				},
				{
					"line": 1203,
					"column": 25,
					"label": "factory_create_stream: 2.pool = pj_pool_create(wf->pf, \"wmme-dev\", 1000, 1000, NULL)"
				},
				{
					"line": 1206,
					"column": 2,
					"label": "factory_create_stream: 3.wmme_stream* strm = PJ_POOL_ZALLOC_T(pool, struct wmme_stream)"
				},
				{
					"line": 1227,
					"column": 23,
					"label": "factory_create_stream: 4.init_player_stream(wf, strm->pool, strm, &strm->play_strm, param, buf_count)"
				},
				{
					"line": 1251,
					"column": 25,
					"label": "factory_create_stream: 5.init_capture_stream(wf, strm->pool, strm, &strm->rec_strm, param, buf_count)"
				},
				{
					"line": 1279,
					"column": 2,
					"label": "factory_create_stream: 6.wmme_stream::thread_quit_event = CreateEvent(NULL, FALSE, FALSE, NULL)"
				},
				{
					"line": 1287,
					"column": 4,
					"label": "factory_create_stream: 7.pj_thread_create(pool, \"wmme\", &wmme_dev_thread, strm, 0, 0, &strm->thread) "
				},
				{
					"line": 1296,
					"column": 1,
					"label": "factory_create_stream: 8.stream_set_cap(&strm->base, PJMEDIA_AUD_DEV_CAP_OUTPUT_VOLUME_SETTING, &param->output_vol)"
				},
				{
					"line": 1302,
					"column": 1,
					"label": "factory_create_stream: 9.strm->base.op = &stream_op; *p_aud_strm = &strm->base"
				},
				{
					"line": 1370,
					"column": 28,
					"label": "stream_set_cap: Function Definition(Override pjmedia_aud_stream_op::set_cap at wmme) "
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-audiodev/android_jni_dev.c",
			"bookmarks": [
				{
					"line": 122,
					"column": 30,
					"label": "pjmedia_aud_dev_factory_op android_op: Static Value Definition"
				},
				{
					"line": 133,
					"column": 15,
					"label": "pjmedia_aud_stream_op android_strm_op: Static Value Definition "
				},
				{
					"line": 918,
					"column": 19,
					"label": "strm_set_cap: Function Definition(Override pjmedia_aud_stream_op::set_cap at android)"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-audiodev/audiodev.c",
			"bookmarks": [
				{
					"line": 80,
					"column": 34,
					"label": "pjmedia_aud_subsys_init: Function Definition"
				},
				{
					"line": 84,
					"column": 0,
					"label": "pjmedia_aud_subsys_init: 1.pjmedia_aud_subsys *aud_subsys = pjmedia_get_aud_subsys() "
				},
				{
					"line": 124,
					"column": 0,
					"label": "pjmedia_aud_subsys_init: 2.aud_subsys->drv[aud_subsys->drv_cnt++].create = &pjmedia_wmme_factory"
				},
				{
					"line": 147,
					"column": 0,
					"label": "pjmedia_aud_subsys_init: 3.pjmedia_aud_driver_init(i, PJ_FALSE) "
				},
				{
					"line": 149,
					"column": 0,
					"label": "pjmedia_aud_subsys_init: 4.pjmedia_aud_driver_deinit(i) when status != PJ_SUCCESS"
				},
				{
					"line": 159,
					"column": 28,
					"label": "pjmedia_aud_register_factory: Function Definition"
				},
				{
					"line": 180,
					"column": 21,
					"label": "pjmedia_aud_unregister_factory: Function Definition"
				},
				{
					"line": 206,
					"column": 60,
					"label": "pjmedia_aud_subsys_get_pool_factory: Function Definition"
				},
				{
					"line": 213,
					"column": 35,
					"label": "pjmedia_aud_subsys_shutdown: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia/port.h",
			"bookmarks": [
				{
					"line": 228,
					"column": 23,
					"label": "struct pjmedia_port_info: Struct Definition"
				},
				{
					"line": 232,
					"column": 0,
					"label": "pjmedia_port_info: 1.pjmedia_dir dir"
				},
				{
					"line": 233,
					"column": 0,
					"label": "pjmedia_port_info: 2.pjmedia_format fmt"
				},
				{
					"line": 363,
					"column": 18,
					"label": "struct pjmedia_port: Struct Definition(Inherit pjmedia_port_info)"
				},
				{
					"line": 379,
					"column": 1,
					"label": "pjmedia_port::get_clock_src: Function Pointer"
				},
				{
					"line": 386,
					"column": 1,
					"label": "pjmedia_port::put_frame: Function Pointer"
				},
				{
					"line": 393,
					"column": 1,
					"label": "pjmedia_port::get_fame: Function Pointer"
				},
				{
					"line": 399,
					"column": 1,
					"label": "pjmedia_port::on_destroy: Function Pointer"
				},
				{
					"line": 418,
					"column": 32,
					"label": "pjmedia_port_info_init: Function Declare"
				},
				{
					"line": 454,
					"column": 45,
					"label": "pjmedia_port_get_clock_src: Function Declare"
				},
				{
					"line": 466,
					"column": 30,
					"label": "pjmedia_port_get_frame: Function Declare"
				},
				{
					"line": 477,
					"column": 30,
					"label": "pjmedia_port_put_frame: Function Declare"
				},
				{
					"line": 487,
					"column": 34,
					"label": "pjmedia_port_destroy: Function Declare"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia/clock.h",
			"bookmarks": [
				{
					"line": 84,
					"column": 32,
					"label": "struct pjmedia_clock_src: Struct Definition"
				},
				{
					"line": 112,
					"column": 32,
					"label": "pjmedia_clock_src_init: Function Declare"
				},
				{
					"line": 129,
					"column": 30,
					"label": "pjmedia_clock_src_update: Function Declare"
				},
				{
					"line": 144,
					"column": 29,
					"label": "pjmedia_clock_src_get_current_timestamp: Function Declare"
				},
				{
					"line": 155,
					"column": 0,
					"label": "pjmedia_clock_src_get_time_msec: Function Definition"
				},
				{
					"line": 183,
					"column": 24,
					"label": "struct pjmedia_clock_param: Struct Definition"
				},
				{
					"line": 203,
					"column": 25,
					"label": "pjmedia_clock_callback: Function Definition"
				},
				{
					"line": 230,
					"column": 34,
					"label": "pjmedia_clock_create: Function Declare"
				},
				{
					"line": 255,
					"column": 34,
					"label": "pjmedia_clock_create2: Function Declare"
				},
				{
					"line": 271,
					"column": 29,
					"label": "pjmedia_clock_start: Function Declare"
				},
				{
					"line": 281,
					"column": 30,
					"label": "pjmedia_clock_stop: Function Declare"
				},
				{
					"line": 291,
					"column": 41,
					"label": "pjmedia_clock_modify: Function Declare"
				},
				{
					"line": 310,
					"column": 31,
					"label": "pjmedia_clock_wait: Function Declare"
				},
				{
					"line": 322,
					"column": 32,
					"label": "pjmedia_clock_destroy: Function Declare"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/wav_playlist.c",
			"bookmarks": [
				{
					"line": 57,
					"column": 14,
					"label": "struct playlist_port: Struct Definition(Inherit pjmedia_port)"
				},
				{
					"line": 241,
					"column": 42,
					"label": "pjmedia_wav_playlist_create: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia/types.h",
			"bookmarks": [
				{
					"line": 53,
					"column": 19,
					"label": "enum pjmedia_type: Enum Definition"
				},
				{
					"line": 76,
					"column": 20,
					"label": "enum pjmedia_tp_proto: Enum Definition"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia/frame.h",
			"bookmarks": [
				{
					"line": 55,
					"column": 28,
					"label": "struct pjmedia_fraem: Struct Definition"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia/endpoint.h",
			"bookmarks": [
				{
					"line": 104,
					"column": 38,
					"label": "pjmedia_endpt_create: Function Definition"
				},
				{
					"line": 117,
					"column": 23,
					"label": "pjmedia_endpt_create: 1.pjmedia_aud_subsys_init() called "
				},
				{
					"line": 121,
					"column": 4,
					"label": "pjmedia_endpt_create: 2.pjmedia_endpt_create2() called "
				},
				{
					"line": 123,
					"column": 4,
					"label": "pjmedia_endpt_create: 3.pjmedia_aud_subsys_shutdown() called if stats != PJ_SUCCESS"
				},
				{
					"line": 267,
					"column": 28,
					"label": "pjmedia_endpt_create_sdp: Function Declare"
				},
				{
					"line": 286,
					"column": 50,
					"label": "pjmedia_endpt_create_base_sdp: Function Declare"
				},
				{
					"line": 303,
					"column": 43,
					"label": "pjmedia_endpt_create_audio_sdp: Function Declare"
				},
				{
					"line": 320,
					"column": 36,
					"label": "pjmedia_endpt_create_video_sdp: Function Declare"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/endpoint.c",
			"bookmarks": [
				{
					"line": 71,
					"column": 19,
					"label": "struct pjmedia_endpt: Struct Definition"
				},
				{
					"line": 80,
					"column": 3,
					"label": "pjmedia_endpt: 1.pjmedia_codec_mgr codec_mgr"
				},
				{
					"line": 83,
					"column": 13,
					"label": "pjmedia_endpt: 2.pj_ioqueue_t *ioqueue"
				},
				{
					"line": 107,
					"column": 36,
					"label": "pjmedia_endpt_create2: Function Definition"
				},
				{
					"line": 117,
					"column": 3,
					"label": "pjmedia_endpt_create2: 1.pj_register_strerror(PJMEDIA_ERRNO_START, PJ_ERRNO_SPACE_SIZE, &pjmedia_strerror)"
				},
				{
					"line": 128,
					"column": 1,
					"label": "pjmedia_endpt_create2: 2.pjmedia_endpt *endpt = PJ_POOL_ZALLOC_T(pool, struct pjmedia_endpt)"
				},
				{
					"line": 146,
					"column": 18,
					"label": "pjmedia_endpt_create2: 3.pjmedia_codec_mgr_init(&endpt->codec_mgr, endpt->pf)"
				},
				{
					"line": 151,
					"column": 1,
					"label": "pjmedia_endpt_create2: 4.pj_list_init(&endpt->exit_cb_list)"
				},
				{
					"line": 158,
					"column": 0,
					"label": "pjmedia_endpt_create2: 5pj_ioqueue_create(endpt->pool, PJ_IOQUEUE_MAX_HANDLES, &endpt->ioqueue) called if endpt->ioqueue == NULL"
				},
				{
					"line": 171,
					"column": 0,
					"label": "pjmedia_endpt_create2: 6.pj_thread_create(endpt->pool, \"media\", &worker_proc, endpt, 0, 0, &endpt->thread[i])"
				},
				{
					"line": 277,
					"column": 36,
					"label": "pjmedia_endpt_get_ioqueue: Function Definition"
				},
				{
					"line": 332,
					"column": 34,
					"label": "worker_proc: Function Definition"
				},
				{
					"line": 347,
					"column": 33,
					"label": "pjmedia_endpt_create_pool: Function Definition"
				},
				{
					"line": 358,
					"column": 28,
					"label": "init_sdp_media: Function Definition"
				},
				{
					"line": 406,
					"column": 38,
					"label": "pjmedia_endpt_create_audio_sdp: Function Declare"
				},
				{
					"line": 426,
					"column": 38,
					"label": "pjmedia_endpt_create_audio_sdp: 1.pjmedia_sdp_media *m = PJ_POOL_ZALLOC_T(pool, pjmedia_sdp_media)"
				},
				{
					"line": 427,
					"column": 18,
					"label": "pjmedia_endpt_create_audio_sdp: 2.init_sdp_media(m, pool, &STR_AUDIO, si)"
				},
				{
					"line": 760,
					"column": 38,
					"label": "pjmedia_endpt_create_base_sdp: Function Definition"
				},
				{
					"line": 813,
					"column": 30,
					"label": "pjmedia_endpt_create_sdp: Function Definition"
				},
				{
					"line": 829,
					"column": 37,
					"label": "pjmedia_endpt_create_sdp: 1.pjmedia_endpt_create_base_sdp(endpt, pool, NULL, addr0, &sdp)"
				},
				{
					"line": 834,
					"column": 33,
					"label": "pjmedia_endpt_create_sdp: 2.pjmedia_endpt_create_audio_sdp(endpt, pool, &sock_info[0], 0, &m)"
				},
				{
					"line": 846,
					"column": 1,
					"label": "pjmedia_endpt_create_sdp: 3.pjmedia_endpt_create_video_sdp(endpt, pool, &sock_info[i], 0, &m) in Loop"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia/codec.h",
			"bookmarks": [
				{
					"line": 234,
					"column": 20,
					"label": "struct pjmedia_codec_info: Struct Definition"
				},
				{
					"line": 267,
					"column": 34,
					"label": "struct pjmedia_codec_param: Struct Definition"
				},
				{
					"line": 334,
					"column": 21,
					"label": "struct pjmedia_codec_op: Struct Definition"
				},
				{
					"line": 348,
					"column": 21,
					"label": "pjmedia_codec_op::init: Function Point Definition"
				},
				{
					"line": 365,
					"column": 21,
					"label": "pjmedia_codec_op::open: Function Point Definition"
				},
				{
					"line": 379,
					"column": 22,
					"label": "pjmedia_codec_op::close: Function Point Definition"
				},
				{
					"line": 398,
					"column": 20,
					"label": "pjmedia_codec_op::modify: Function Point Definition"
				},
				{
					"line": 422,
					"column": 20,
					"label": "pjmedia_codec_op::parse: Function Point Definition"
				},
				{
					"line": 444,
					"column": 22,
					"label": "pjmedia_codec_op::encode: Function Point Definition"
				},
				{
					"line": 466,
					"column": 21,
					"label": "pjmedia_codec_op::decode: Function Point Definition"
				},
				{
					"line": 484,
					"column": 21,
					"label": "pjmedia_codec_op::recover: Function Point Definition"
				},
				{
					"line": 500,
					"column": 20,
					"label": "struct pjmedia_codec: Struct Definition"
				},
				{
					"line": 509,
					"column": 20,
					"label": "pjmedia_codec: 1.pjmedia_codec_factory *factory"
				},
				{
					"line": 512,
					"column": 20,
					"label": "pjmedia_codec: 2.pjmedia_codec_op *op"
				},
				{
					"line": 521,
					"column": 25,
					"label": "struct pjmedia_codec_factory_op: Struct Definition"
				},
				{
					"line": 533,
					"column": 22,
					"label": "pjmedia_codec_factory_op::test_alloc: Function Point Definition"
				},
				{
					"line": 546,
					"column": 30,
					"label": "pjmedia_codec_factory_op::default_attr: Function Point Definition"
				},
				{
					"line": 563,
					"column": 23,
					"label": "pjmedia_codec_factory_op::enum_info: Function Point Definition"
				},
				{
					"line": 576,
					"column": 23,
					"label": "pjmedia_codec_factory_op::alloc_codec: Function Point Definition"
				},
				{
					"line": 589,
					"column": 24,
					"label": "pjmedia_codec_factory_op::dealloc_codec: Function Point Definition"
				},
				{
					"line": 595,
					"column": 21,
					"label": "pjmedia_codec_factory_op::destroy: Function Point Definition"
				},
				{
					"line": 606,
					"column": 19,
					"label": "struct pjmedia_codec_factory: Struct Definition"
				},
				{
					"line": 615,
					"column": 15,
					"label": "pjmedia_codec_factory: 1.pjmedia_codec_factory_op *op"
				},
				{
					"line": 630,
					"column": 24,
					"label": "enum pjmedia_codec_priority: Enum Definition"
				},
				{
					"line": 687,
					"column": 25,
					"label": "struct pjmedia_codec_desc: Struct Definition"
				},
				{
					"line": 703,
					"column": 22,
					"label": "struct pjmedia_codec_mgr: Struct Definition"
				},
				{
					"line": 715,
					"column": 25,
					"label": "pjmedia_codec_mgr: 1.pjmedia_codec_factory factory_list"
				},
				{
					"line": 736,
					"column": 43,
					"label": "pjmedia_codec_mgr_init: Function Declare"
				},
				{
					"line": 748,
					"column": 35,
					"label": "pjmedia_codec_mgr_destroy: Function Declare"
				},
				{
					"line": 762,
					"column": 34,
					"label": "pjmedia_codec_mgr_register_factory: Function Declare"
				},
				{
					"line": 778,
					"column": 36,
					"label": "pjmedia_codec_mgr_unregister_factory: Function Declare"
				},
				{
					"line": 797,
					"column": 50,
					"label": "pjmedia_codec_mgr_enum_codecs: Function Declare"
				},
				{
					"line": 816,
					"column": 26,
					"label": "pjmedia_codec_mgr_get_codec_info: Function Declare"
				},
				{
					"line": 831,
					"column": 26,
					"label": "pjmedia_codec_info_to_id: Function Declare"
				},
				{
					"line": 855,
					"column": 22,
					"label": "pjmedia_codec_mgr_find_codecs_by_id: Function Declare"
				},
				{
					"line": 879,
					"column": 36,
					"label": "pjmedia_codec_mgr_set_codec_priority: Function Declare"
				},
				{
					"line": 897,
					"column": 35,
					"label": "pjmedia_codec_mgr_get_default_param: Function Declare"
				},
				{
					"line": 915,
					"column": 13,
					"label": "pjmedia_codec_mgr_set_default_param: Function Declare"
				},
				{
					"line": 933,
					"column": 29,
					"label": "pjmedia_codec_mgr_alloc_codec: Function Declare"
				},
				{
					"line": 947,
					"column": 52,
					"label": "pjmedia_codec_mgr_dealloc_codec: Function Declare"
				},
				{
					"line": 960,
					"column": 38,
					"label": "pjmedia_codec_init: Function Definition"
				},
				{
					"line": 978,
					"column": 41,
					"label": "pjmedia_codec_open: Function Definition"
				},
				{
					"line": 993,
					"column": 25,
					"label": "pjmedia_codec_close: Function Definition"
				},
				{
					"line": 1013,
					"column": 29,
					"label": "pjmedia_codec_modify: Function Definition"
				},
				{
					"line": 1038,
					"column": 34,
					"label": "pjmedia_codec_parse: Function Definition"
				},
				{
					"line": 1062,
					"column": 33,
					"label": "pjmedia_codec_encode: Function Definition"
				},
				{
					"line": 1086,
					"column": 35,
					"label": "pjmedia_codec_decode: Function Definition"
				},
				{
					"line": 1106,
					"column": 34,
					"label": "pjmedia_codec_recover: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/codec.c",
			"bookmarks": [
				{
					"line": 78,
					"column": 35,
					"label": "pjmedia_codec_mgr_init: Function Definition"
				},
				{
					"line": 105,
					"column": 37,
					"label": "pjmedia_codec_mgr_destroy: Function Definition"
				},
				{
					"line": 146,
					"column": 44,
					"label": "pjmedia_codec_mgr_register_factory: Function Definition"
				},
				{
					"line": 164,
					"column": 32,
					"label": "pjmedia_codec_mgr_register_factory: 1.pjmedia_codec_factory_op::enum_info() called."
				},
				{
					"line": 171,
					"column": 8,
					"label": "pjmedia_codec_mgr_register_factory: 2.count + mgr->codec_cnt > PJ_ARRAY_SZIE(mgr->codec_desc)"
				},
				{
					"line": 179,
					"column": 0,
					"label": "pjmedia_codec_mgr_register_factory: 3.pj_memcpy(&mgr->codec_desc[mgr->codec_cnt+i], &info[i], sizeof(pjmedia_codec_info))"
				},
				{
					"line": 183,
					"column": 0,
					"label": "pjmedia_codec_mgr_register_factory: 4.pjmedia_codec_info_to_id(&info[i], mgr->codec_desc[mgr->codec_cnt+i].id, sizeof(pjmedia_codec_id))"
				},
				{
					"line": 189,
					"column": 3,
					"label": "pjmedia_codec_mgr_register_factory: 5.mgr->codec_cnt += count"
				},
				{
					"line": 192,
					"column": 0,
					"label": "pjmedia_codec_mgr_register_factory: 6.sort_codecs(mgr)"
				},
				{
					"line": 195,
					"column": 1,
					"label": "pjmedia_codec_mgr_register_factory: 7.pj_list_push_back(&mgr->factory_list, factory)"
				},
				{
					"line": 402,
					"column": 17,
					"label": "sort_codecs: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia/format.h",
			"bookmarks": [
				{
					"line": 54,
					"column": 22,
					"label": "enum pjmedia_format_id: Enum Definition"
				},
				{
					"line": 244,
					"column": 27,
					"label": "struct pjmedia_audio_format_detail: Struct Definition"
				},
				{
					"line": 261,
					"column": 26,
					"label": "struct pjmedia_video_format_detail: Struct Definition"
				},
				{
					"line": 281,
					"column": 20,
					"label": "struct pjmedia_format: Struct Definition"
				},
				{
					"line": 329,
					"column": 23,
					"label": "enum pjmedia_color_model: Enum Definition"
				},
				{
					"line": 348,
					"column": 32,
					"label": "struct pjmedia_video_apply_fmt_param: Struct Definition"
				},
				{
					"line": 356,
					"column": 13,
					"label": "pjmedia_video_apply_fmt_param::size: pjmedia_rect_size size"
				},
				{
					"line": 399,
					"column": 34,
					"label": "struct pjmedia_video_format_info: Struct Definition"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia/sdp.h",
			"bookmarks": [
				{
					"line": 84,
					"column": 14,
					"label": "struct pjmedia_sdp_attr: Struct Definition"
				},
				{
					"line": 211,
					"column": 16,
					"label": "struct pjmedia_sdp_rtpmap: Struct Definition"
				},
				{
					"line": 380,
					"column": 15,
					"label": "struct pjmedia_sdp_conn: Struct Definition"
				},
				{
					"line": 429,
					"column": 23,
					"label": "struct pjmedia_sdp_bandw: Struct Definition"
				},
				{
					"line": 459,
					"column": 16,
					"label": "struct pjmedia_sdp_media: Struct Definition"
				},
				{
					"line": 470,
					"column": 2,
					"label": "pjmedia_sdp_media: 1.struct desc for Media descriptor line(\"m=\" line)"
				},
				{
					"line": 472,
					"column": 12,
					"label": "pjmedia_sdp_media: 2.pjmedia_sdp_conn *conn"
				},
				{
					"line": 474,
					"column": 1,
					"label": "pjmedia_sdp_media: 3.pjmedia_sdp_bandw *bandw[PJMEDIA_MAX_SDP_BANDW]"
				},
				{
					"line": 476,
					"column": 1,
					"label": "pjmedia_sdp_media: 4.pjmedia_sdp_attr *attr[PJMEDIA_MAX_SDP_ATTR]"
				},
				{
					"line": 652,
					"column": 17,
					"label": "struct pjmedia_sdp_session: Struct Definition"
				},
				{
					"line": 663,
					"column": 12,
					"label": "pjmedia_sdp_session: 1.struct origin(Session origin (o= line))"
				},
				{
					"line": 665,
					"column": 1,
					"label": "pjmedia_sdp_session: 2.pj_str_t name"
				},
				{
					"line": 666,
					"column": 1,
					"label": "pjmedia_sdp_session: 3.pjmedia_sdp_conn *conn"
				},
				{
					"line": 668,
					"column": 2,
					"label": "pjmedia_sdp_session: 4.pjmedia_sdp_bandw bandw[PJMDIA_MAX_SDP_BANDW]"
				},
				{
					"line": 676,
					"column": 2,
					"label": "pjmedia_sdp_session: 5.struct time"
				},
				{
					"line": 679,
					"column": 2,
					"label": "pjmedia_sdp_session: 6.pjmedia_sdp_attr *attr[PJMEDIA_MAX_SDP_ATTR]"
				},
				{
					"line": 682,
					"column": 2,
					"label": "pjmedia_sdp_session: 7.pjmedia_sdp_media *media[PJMEDIA_MAX_SDP_MEDIA]"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/sdp.c",
			"bookmarks": [
				{
					"line": 441,
					"column": 38,
					"label": "pjmedia_sdp_attr_create_rtcp: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-codec/speex_codec.c",
			"bookmarks": [
				{
					"line": 82,
					"column": 14,
					"label": "pjmedia_codec_op spx_op: Static Value Definition"
				},
				{
					"line": 95,
					"column": 19,
					"label": "pjmedia_codec_factory_op spx_factory_op: Static Value Definition"
				},
				{
					"line": 203,
					"column": 35,
					"label": "pjmedia_codec_speex_init: Function Definition"
				},
				{
					"line": 287,
					"column": 21,
					"label": "pjmedia_codec_speex_init: .pjmedia_codec_mgr_register_factory"
				}
			]
		},
		{
			"path": "pjsip-apps/src/3rdparty_media_sample/alt_pjsua_aud.c",
			"bookmarks": [
				{
					"line": 59,
					"column": 12,
					"label": "struct alt_codec_factory alt_codec_factory: Static Value Definition"
				},
				{
					"line": 61,
					"column": 30,
					"label": "alt_codec_test_alloc: Function Definition(Override pjmedia_codec_factory_op::test_alloc)"
				},
				{
					"line": 72,
					"column": 41,
					"label": "alt_codec_default_attr: Function Definition(Override pjmedia_codec_factory_op::default_attr)"
				},
				{
					"line": 106,
					"column": 40,
					"label": "alt_codec_enum_codec: Function Definition(Override pjmedia_codec_factory::enum_info)"
				},
				{
					"line": 127,
					"column": 28,
					"label": "alt_codec_alloc_codec: Function Definition(Override pjmedia_codec_factory::alloc_codec)"
				},
				{
					"line": 136,
					"column": 34,
					"label": "alt_codec_dealloc_codec: Function Definition(Override pjmedia_codec_factory::dealloc_codec)"
				},
				{
					"line": 144,
					"column": 34,
					"label": "alt_codec_deinit: Function Definition(Override pjmedia_codec_factory_op::destroy)"
				},
				{
					"line": 153,
					"column": 39,
					"label": "pjmedia_codec_factory_op alt_codec_factory_op: Static Value Definition"
				},
				{
					"line": 169,
					"column": 24,
					"label": "pjsua_aud_subsys_init: Function Definition"
				},
				{
					"line": 175,
					"column": 4,
					"label": "pjsua_aud_subsys_init: 1.alt_codec_factory.base.op = &alt_codec_factory_op"
				},
				{
					"line": 177,
					"column": 4,
					"label": "pjsua_aud_subsys_init: 2.pjmedia_codec_mgr_register_factory() called "
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-codec/silk.c",
			"bookmarks": [
				{
					"line": 116,
					"column": 23,
					"label": "pjmedia_codec_op silk_op: Static Value Definition"
				},
				{
					"line": 129,
					"column": 47,
					"label": "pjmedia_codec_factory_op silk_factory_op: Static Value Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-codec/passthrough.c",
			"bookmarks": [
				{
					"line": 82,
					"column": 16,
					"label": "pjmedia_codec_op codec_op: Static Value Definition"
				},
				{
					"line": 95,
					"column": 31,
					"label": "pjmedia_codec_factory_op codec_factory_op: Static Value Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-codec/opencore_amr.c",
			"bookmarks": [
				{
					"line": 124,
					"column": 13,
					"label": "pjmedia_codec_op amr_op: Static Value Definition"
				},
				{
					"line": 137,
					"column": 20,
					"label": "pjmedia_codec_factory_op amr_factory_op: Static Value Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-codec/l16.c",
			"bookmarks": [
				{
					"line": 91,
					"column": 27,
					"label": "pjmedia_codec_op l16_op: Static Value Definition"
				},
				{
					"line": 108,
					"column": 27,
					"label": "pjmedia_codec_factory_op l16_factory_op: Static Value Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-codec/opus.c",
			"bookmarks": [
				{
					"line": 99,
					"column": 17,
					"label": "pjmedia_codec_op opus_op: Static Value Definition"
				},
				{
					"line": 112,
					"column": 31,
					"label": "pjmedia_codec_factory_op opus_factory_op: Static Value Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-codec/ipp_codecs.c",
			"bookmarks": [
				{
					"line": 89,
					"column": 17,
					"label": "pjmedia_codec_op ipp_op: Static Value Definition"
				},
				{
					"line": 102,
					"column": 21,
					"label": "pjmedia_codec_factory_op ipp_factory_op: Static Value Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-codec/ilbc.c",
			"bookmarks": [
				{
					"line": 96,
					"column": 13,
					"label": "pjmedia_codec_op ilbc_op: Static Value Definition"
				},
				{
					"line": 109,
					"column": 22,
					"label": "pjmedia_codec_factory_op ilbc_factory_op: Static Value Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-codec/gsm.c",
			"bookmarks": [
				{
					"line": 96,
					"column": 13,
					"label": "pjmedia_codec_op gsm_op: Static Value Definition"
				},
				{
					"line": 113,
					"column": 20,
					"label": "pjmedia_codec_factory_op gsm_factory_op: Static Value Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-codec/g7221.c",
			"bookmarks": [
				{
					"line": 99,
					"column": 17,
					"label": "pjmedia_codec_op codec_op: Static Value Definition"
				},
				{
					"line": 112,
					"column": 31,
					"label": "pjmedia_codec_factory_op codec_factory_op: Static Value Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-codec/g722.c",
			"bookmarks": [
				{
					"line": 101,
					"column": 16,
					"label": "pjmedia_codec_op g722_op: Static Value Definition"
				},
				{
					"line": 118,
					"column": 20,
					"label": "pjmedia_codec_factory_op g722_factory_op: Static Value Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-codec/bcg729.c",
			"bookmarks": [
				{
					"line": 88,
					"column": 18,
					"label": "pjmedia_codec_op bcg729_op: Static Value Definition"
				},
				{
					"line": 101,
					"column": 17,
					"label": "pjmedia_codec_factory_op bcg729_factory_op: Static Value Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/g711.c",
			"bookmarks": [
				{
					"line": 90,
					"column": 14,
					"label": "pjmedia_codec_op g711_op: Static Value Definition"
				},
				{
					"line": 107,
					"column": 31,
					"label": "pjmedia_codec_factory_op g711_factory_op: Static Value Definition"
				},
				{
					"line": 141,
					"column": 25,
					"label": "pjmedia_codec_g711_init: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-codec/audio_codecs.c",
			"bookmarks": [
				{
					"line": 32,
					"column": 35,
					"label": "pjmedia_codec_register_audio_codec: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-videodev/videodev.c",
			"bookmarks": [
				{
					"line": 74,
					"column": 47,
					"label": "pjmedia_vid_dev_subsys_init: Function Definition"
				},
				{
					"line": 117,
					"column": 55,
					"label": "pjmedia_vid_dev_subsys_init: .vid_subsys->drv[drv_cnt++].create = &pjmedia_sdl_factory"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-videodev/avi_dev.c",
			"bookmarks": [
				{
					"line": 39,
					"column": 10,
					"label": "struct avi_dev_info: Struct Definition(Inherit pjmedia_vid_dev_info)"
				},
				{
					"line": 46,
					"column": 21,
					"label": "avi_dev_info: 1.pjmedia_avi_streams avi"
				},
				{
					"line": 47,
					"column": 21,
					"label": "avi_dev_info: 2.pjmedia_port *vid"
				},
				{
					"line": 48,
					"column": 21,
					"label": "avi_dev_info: 3.avi_dev_strm *strm"
				},
				{
					"line": 49,
					"column": 21,
					"label": "avi_dev_info: 4.pjmedia_vid_codec *codec"
				},
				{
					"line": 55,
					"column": 15,
					"label": "struct avi_factory: Struct Definition(Inherit pjmedia_vid_dev_factory)"
				},
				{
					"line": 62,
					"column": 15,
					"label": "avi_factory: 1.struct avi_dev_info *dev_info"
				},
				{
					"line": 66,
					"column": 12,
					"label": "struct avi_dev_strm: Struct Definition(Inherit pjmedia_vid_dev_stream)"
				},
				{
					"line": 114,
					"column": 24,
					"label": "pjmedia_vid_dev_factory_op factory_op: Static Value Definition"
				},
				{
					"line": 125,
					"column": 27,
					"label": "pjmedia_vid_dev_stream_op stream_op: Static Value Definition"
				},
				{
					"line": 143,
					"column": 50,
					"label": "pjmedia_avi_dev_create_factory: Function Definition"
				},
				{
					"line": 358,
					"column": 41,
					"label": "pjmedia_avi_dev_alloc: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-videodev/v4l2_dev.c",
			"bookmarks": [
				{
					"line": 92,
					"column": 26,
					"label": "struct vid4lin_stream: Struct Definition(Inherit pjmedia_vid_dev_stream)"
				},
				{
					"line": 105,
					"column": 15,
					"label": "vid4lin_stream: .pjmedia_vid_dev_cb"
				},
				{
					"line": 164,
					"column": 32,
					"label": "pjmedia_vid_dev_stream_op stream_op: Static Value Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-videodev/sdl_dev.c",
			"bookmarks": [
				{
					"line": 147,
					"column": 17,
					"label": "struct sdl_factory: Struct Definition(Inherit pjmedia_vid_dev_factory)"
				},
				{
					"line": 167,
					"column": 13,
					"label": "struct sdl_stream: Struct Definition(Inherit pjmedia_vid_dev_stream)"
				},
				{
					"line": 252,
					"column": 22,
					"label": "pjmedia_vid_dev_stream_op stream_op: Static Value Definition"
				},
				{
					"line": 278,
					"column": 44,
					"label": "pjmedia_sdl_factory: Function Definition"
				},
				{
					"line": 932,
					"column": 27,
					"label": "sdl_factory_create_stream: Function Definition(Override pjmedia_vid_dev_factory_op::create_stream)"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia-videodev/videodev_imp.h",
			"bookmarks": [
				{
					"line": 33,
					"column": 22,
					"label": "struct pjmedia_vid_dev_factory_op: Struct Definition"
				},
				{
					"line": 106,
					"column": 23,
					"label": "struct pjmedia_vid_dev_factory: Struct Definition"
				},
				{
					"line": 112,
					"column": 2,
					"label": "pjmedia_vid_dev_factory::sys"
				},
				{
					"line": 115,
					"column": 2,
					"label": "pjmedia_vid_dev_factory::op: pjmedia_vid_dev_factory_op *op"
				},
				{
					"line": 122,
					"column": 28,
					"label": "struct pjmedia_vid_dev_stream_op: Struct Definition"
				},
				{
					"line": 177,
					"column": 20,
					"label": "struct pjmedia_vid_dev_stream: Struct Definition"
				},
				{
					"line": 189,
					"column": 20,
					"label": "pjmedia_vid_dev_stream::op: pjmedia_vid_dev_stream_op *op"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia/videodev.h",
			"bookmarks": [
				{
					"line": 287,
					"column": 29,
					"label": "struct pjmedia_vid_dev_info: Struct Definition"
				},
				{
					"line": 333,
					"column": 27,
					"label": "struct pjmedia_vid_dev_cb: Struct Definition"
				},
				{
					"line": 346,
					"column": 15,
					"label": "pjmedia_vid_dev_cb::capture_cb: Function Point Declare"
				},
				{
					"line": 369,
					"column": 22,
					"label": "pjmedia_vid_dev_cb::render_cb: Function Point Declare"
				},
				{
					"line": 379,
					"column": 36,
					"label": "struct pjmedia_vid_dev_param: Struct Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/avi_player.c",
			"bookmarks": [
				{
					"line": 117,
					"column": 26,
					"label": "struct pjmedia_avi_streams: Struct Definition"
				},
				{
					"line": 199,
					"column": 33,
					"label": "pjmedia_avi_player_create_stream: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/vid_codec.c",
			"bookmarks": [
				{
					"line": 32,
					"column": 21,
					"label": "pjmedia_vid_codec_mgr *def_vid_codec_mgr: Static Value Definition"
				},
				{
					"line": 36,
					"column": 29,
					"label": "struct pjmedia_vid_codec_default_param: Struct Definition"
				},
				{
					"line": 39,
					"column": 29,
					"label": "pjmedia_vid_codec_default_param::param: pjmedia_vid_codec_param *param"
				},
				{
					"line": 47,
					"column": 27,
					"label": "struct pjmedia_vid_codec_desc: Struct Definition"
				},
				{
					"line": 49,
					"column": 17,
					"label": "pjmedia_vid_codec_desc::pjmedia_vid_codec_info: pjmedia_vid_codec_info info"
				},
				{
					"line": 50,
					"column": 22,
					"label": "pjmedia_vid_codec_desc::id: pjmedia_codec_id id"
				},
				{
					"line": 51,
					"column": 21,
					"label": "pjmedia_vid_codec_desc::prio: pjmedia_codec_priority prio"
				},
				{
					"line": 52,
					"column": 21,
					"label": "pjmedia_vid_codec_desc::factory: pjmedia_vid_codec_factory factory"
				},
				{
					"line": 53,
					"column": 21,
					"label": "pjmedia_vid_codec_desc::def_param: pjmedia_vid_codec_default_param *def_param"
				},
				{
					"line": 59,
					"column": 14,
					"label": "struct pjmedia_vid_codec_mgr: Struct Definition"
				},
				{
					"line": 593,
					"column": 40,
					"label": "pjmedia_vid_codec_mgr_get_default_param: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia/vid_codec.h",
			"bookmarks": [
				{
					"line": 113,
					"column": 26,
					"label": "struct pjmedia_vid_codec_info: Struct Definition"
				},
				{
					"line": 147,
					"column": 25,
					"label": "pjmedia_vid_codec_param: Struct Definition"
				},
				{
					"line": 189,
					"column": 27,
					"label": "struct pjmedia_vid_codec_op: Struct Definition"
				},
				{
					"line": 291,
					"column": 27,
					"label": "struct pjmedia_vid_codec_factory_op: Struct Definition"
				},
				{
					"line": 371,
					"column": 22,
					"label": "struct pjmedia_vid_codec_factory: Struct Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/master_port.c",
			"bookmarks": [
				{
					"line": 28,
					"column": 26,
					"label": "struct pjmedia_master_port: Struct Definition"
				},
				{
					"line": 31,
					"column": 15,
					"label": "pjmedia_master_port: 1.pjmedia_clock *clock"
				},
				{
					"line": 32,
					"column": 15,
					"label": "pjmedia_master_port: 2.pjmedia_port *u_port"
				},
				{
					"line": 33,
					"column": 15,
					"label": "pjmedia_master_port: 3.pjmedia_port *d_port"
				},
				{
					"line": 47,
					"column": 30,
					"label": "pjmedia_master_port_create: Function Definition"
				},
				{
					"line": 64,
					"column": 1,
					"label": "pjmedia_master_port_create: 1.pjmedia_format_get_audio_format_detail() called "
				},
				{
					"line": 68,
					"column": 1,
					"label": "pjmedia_master_port_create: 2.PJ_ASSERT_RETURN(u_afd->clock_rate == d_afd->clock_rate, PJMEDIA_ENCCLOCKRATE)"
				},
				{
					"line": 72,
					"column": 5,
					"label": "pjmedia_master_port_create: 3.PJ_ASSERT_RETURN(PJMEDIA_PIA_SPF(&u_port->info) == PJMEDIA_PIA_SPF(&d_port->info),PJMEDIA_ENCSAMPLESPFRAME)"
				},
				{
					"line": 77,
					"column": 20,
					"label": "pjmedia_master_port_create: 4.PJ_ASSERT_RETURN(u_afd->channel_count == d_afd->channe_count, PJMEDIA_ENCCHANNEL)"
				},
				{
					"line": 82,
					"column": 1,
					"label": "pjmedia_master_port_create: 5.clock_rate/samples_per_frame/channel_count/bytes_per_frame"
				},
				{
					"line": 96,
					"column": 2,
					"label": "pjmedia_master_port_create: 6.pjmedia_master_port *m = PJ_POOL_ZALLOC_T(pool, pjmedia_master_port)"
				},
				{
					"line": 103,
					"column": 2,
					"label": "pjmedia_master_port_create: 7.pjmedia_master_port::buff = pj_pool_alloc(pool, bytes_per_frame)"
				},
				{
					"line": 109,
					"column": 2,
					"label": "pjmedia_master_port_create: 8.pj_lock_create_simple_mutex() called."
				},
				{
					"line": 114,
					"column": 7,
					"label": "pjmedia_master_port_create: 9.pjmedia_clock_create(pool, clock_rate, channel_count, samples_per_frame, options, &clock_callback, m, &m->clock)"
				},
				{
					"line": 132,
					"column": 31,
					"label": "pjmedia_master_port_start: Function Definition"
				},
				{
					"line": 137,
					"column": 31,
					"label": "pjmedia_master_port_start: 1.pjmedia_clock_start(m->clock)"
				},
				{
					"line": 144,
					"column": 36,
					"label": "pjmedia_master_port_stop: Function Definition"
				},
				{
					"line": 148,
					"column": 36,
					"label": "pjmedia_master_port_stop: 1.pjmedia_clock_stop(m->clock)"
				},
				{
					"line": 153,
					"column": 42,
					"label": "pjmedia_master_port_wait: Function Definition"
				},
				{
					"line": 159,
					"column": 42,
					"label": "pjmedia_master_port_wait: 1.pjmedia_clock_wait(clock, wait, ts)"
				},
				{
					"line": 165,
					"column": 24,
					"label": "clock_callback: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/clock_thread.c",
			"bookmarks": [
				{
					"line": 109,
					"column": 13,
					"label": "struct pjmedia_clock: Struct Definition"
				},
				{
					"line": 136,
					"column": 32,
					"label": "pjmedia_clock_create: Function Definition"
				},
				{
					"line": 150,
					"column": 1,
					"label": "pjmedia_clock_create: 1.pjmedia_clock_create2() called."
				},
				{
					"line": 154,
					"column": 33,
					"label": "pjmedia_clock_create2: Function Definition"
				}
			]
		},
		{
			"path": "pjlib/include/pj/os.h",
			"bookmarks": [
				{
					"line": 1198,
					"column": 42,
					"label": "pj_get_timestamp_freq: Function Declare"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/format.c",
			"bookmarks": [
				{
					"line": 27,
					"column": 38,
					"label": "pjmedia_format_get_audio_format_detail: Function Definition"
				},
				{
					"line": 65,
					"column": 28,
					"label": "struct pjmedia_video_format_mgr: Struct Definition"
				},
				{
					"line": 73,
					"column": 28,
					"label": "pjmedia_video_format_info *built_in_vid_fmt_info[]: Static Value Definition"
				},
				{
					"line": 91,
					"column": 27,
					"label": "pjmedia_format_init_video: Function Definition"
				},
				{
					"line": 107,
					"column": 19,
					"label": "pjmedia_format_init_video: 1.pjmedia_format *fmt assign value"
				},
				{
					"line": 114,
					"column": 17,
					"label": "pjmedia_format_init_video: 2.pjmedia_video_format_info *vfi = pjmedia_get_video_format_info(NULL, fmt->id)"
				},
				{
					"line": 118,
					"column": 28,
					"label": "pjmedia_format_init_video: 3.vfi->apply_fmt(pjmedia_video_foramt_info, &pjmedia_video_apply_fmt_param)"
				},
				{
					"line": 264,
					"column": 21,
					"label": "pjmedia_video_format_mgr_create: Function Definition"
				},
				{
					"line": 276,
					"column": 3,
					"label": "pjmedia_video_format_mgr_create: 1.pjmedia_video_format_mgr *mgr = PJ_POOL_ALLOC_T(pool, pjmedia_video_format_mgr)"
				},
				{
					"line": 285,
					"column": 1,
					"label": "pjmedia_video_format_mgr_create: 2.pjmedia_register_video_format_info(mgr, &built_in_vid_fmt_info[i]) in Loop"
				},
				{
					"line": 297,
					"column": 23,
					"label": "pjmedia_get_video_format_info: Function Definitino"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia/avi_stream.h",
			"bookmarks": [
				{
					"line": 54,
					"column": 20,
					"label": "struct pjmedia_avi_stream: typedef pjmedia_port pjmedia_avi_stream"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/bidirectional.c",
			"bookmarks": [
				{
					"line": 26,
					"column": 17,
					"label": "struct bidir_port: Struct Definition"
				}
			]
		},
		{
			"path": "pjsip-apps/src/samples/playfile.c",
			"bookmarks": [
				{
					"line": 84,
					"column": 6,
					"label": "main: Function Definition(playfile.c)"
				},
				{
					"line": 103,
					"column": 13,
					"label": "main: 1.pj_init() called."
				},
				{
					"line": 107,
					"column": 1,
					"label": "main: 2.pj_caching_pool_init(&cp, &pj_pool_facotry_default_policy, 0)"
				},
				{
					"line": 113,
					"column": 1,
					"label": "main: 3.pjmedia_endpt_create(&cp.factory, NULL, 1, &med_endpt)"
				},
				{
					"line": 117,
					"column": 13,
					"label": "main: 4.pool = pj_pool_create(&cp.factory, \"wav\", 4000, 4000, NULL)"
				},
				{
					"line": 125,
					"column": 1,
					"label": "main: 5.pjmedia_wav_player_port_create(pool, argv[1], 20, 0, 0, &file_port)"
				},
				{
					"line": 138,
					"column": 21,
					"label": "main: 6.pjmedia_snd_port_create_player"
				},
				{
					"line": 156,
					"column": 21,
					"label": "main: 7.pjmedia_snd_port_connect(snd_port, file_port)"
				},
				{
					"line": 182,
					"column": 2,
					"label": "main: 8.pjmedia_snd_port_disconnect(snd_port)"
				},
				{
					"line": 191,
					"column": 28,
					"label": "main: 9.pjmedia_snd_port_destroy(snd_port)"
				},
				{
					"line": 196,
					"column": 28,
					"label": "main: 10.pjmedia_port_destroy(file_port)"
				},
				{
					"line": 201,
					"column": 27,
					"label": "main: 11.pj_pool_release(pool)"
				},
				{
					"line": 204,
					"column": 28,
					"label": "main: 12.pjmedia_endpt_destroy(med_endpt)"
				},
				{
					"line": 207,
					"column": 28,
					"label": "main: 13.pj_caching_pool_destroy(&cp)"
				},
				{
					"line": 210,
					"column": 17,
					"label": "main: 14.pj_shutdown()"
				}
			]
		},
		{
			"path": "pjlib/src/pj/pool_policy_kmalloc.c",
			"bookmarks": [
				{
					"line": 51,
					"column": 47,
					"label": "pj_pool_factory_policy pj_pool_factory_default_policy: Global Value Definition"
				}
			]
		},
		{
			"path": "pjlib/include/pj/pool.h",
			"bookmarks": [
				{
					"line": 299,
					"column": 25,
					"label": "struct pj_pool_block: Struct Definition"
				},
				{
					"line": 301,
					"column": 19,
					"label": "pj_pool_block::PJ_DECL_LIST_MEMBER(struct pj_pool_block)"
				},
				{
					"line": 312,
					"column": 11,
					"label": "struct pj_pool_t: Struct Definition"
				},
				{
					"line": 314,
					"column": 11,
					"label": "pj_pool_t::PJ_DECL_LIST_MEMBER(struct pj_pool_t)"
				},
				{
					"line": 320,
					"column": 8,
					"label": "pj_pool_t::factory: pj_pool_factory *factory "
				},
				{
					"line": 332,
					"column": 9,
					"label": "pj_pool_t::block_list: pj_pool_block block_list"
				},
				{
					"line": 335,
					"column": 11,
					"label": "pj_pool_t::callback: pj_pool_callback *callback"
				},
				{
					"line": 379,
					"column": 27,
					"label": "pj_pool_create: Function Declare"
				},
				{
					"line": 390,
					"column": 24,
					"label": "pj_pool_release: Function Declare"
				},
				{
					"line": 398,
					"column": 28,
					"label": "pj_pool_safe_release: Function Declare"
				},
				{
					"line": 408,
					"column": 41,
					"label": "pj_pool_getobjname: Function Declare"
				},
				{
					"line": 419,
					"column": 21,
					"label": "pj_pool_reset: Function Declare"
				},
				{
					"line": 432,
					"column": 29,
					"label": "pj_pool_get_capacity: Function Declare"
				},
				{
					"line": 441,
					"column": 33,
					"label": "pj_pool_get_used_size: Function Declare"
				},
				{
					"line": 455,
					"column": 25,
					"label": "pj_pool_alloc: Function Declare"
				},
				{
					"line": 468,
					"column": 30,
					"label": "pj_pool_calloc: Function Declare"
				},
				{
					"line": 482,
					"column": 25,
					"label": "pj_pool_zalloc: Function Definition"
				},
				{
					"line": 519,
					"column": 30,
					"label": "pj_pool_alloc_from_block: Function Declare"
				},
				{
					"line": 520,
					"column": 27,
					"label": "pj_pool_allocate_find: Function Declare"
				},
				{
					"line": 588,
					"column": 37,
					"label": "struct pj_pool_factory_policy: Struct Definition"
				},
				{
					"line": 599,
					"column": 23,
					"label": "pj_pool_factory_policy::block_alloc: Function Point Declare"
				},
				{
					"line": 608,
					"column": 23,
					"label": "pj_pool_factory_policy::block_free: Function Point Declare"
				},
				{
					"line": 613,
					"column": 15,
					"label": "pj_pool_factory_policy::callback: pj_pool_callback Member Value"
				},
				{
					"line": 645,
					"column": 15,
					"label": "pj_pool_factory_policy pj_pool_factory_default_policy: Global Vaule Declare(PJ_DECL_DATA)"
				},
				{
					"line": 659,
					"column": 18,
					"label": "struct pj_pool_factory: Struct Definition(Inherit pj_pool_factory_policy)"
				},
				{
					"line": 690,
					"column": 2,
					"label": "pj_pool_factory::create_pool: Function Point Declare"
				},
				{
					"line": 702,
					"column": 2,
					"label": "pj_pool_factory::release_pool: Function Point Declare"
				},
				{
					"line": 709,
					"column": 18,
					"label": "pj_pool_factory::dump_status: Function Point Declare"
				},
				{
					"line": 723,
					"column": 22,
					"label": "pj_pool_factory::on_block_alloc: Function Point Declare"
				},
				{
					"line": 734,
					"column": 17,
					"label": "pj_pool_factory::on_block_free: Function Point Declare"
				},
				{
					"line": 747,
					"column": 32,
					"label": "pj_pool_create_int: Function Declare"
				},
				{
					"line": 760,
					"column": 24,
					"label": "pj_pool_init_int: Function Declare"
				},
				{
					"line": 769,
					"column": 33,
					"label": "pj_pool_destroy_int: Function Declare"
				},
				{
					"line": 816,
					"column": 18,
					"label": "struct pj_caching_pool: Struct Definition(Inherit pj_pool_factory)"
				},
				{
					"line": 888,
					"column": 25,
					"label": "pj_caching_pool_inti: Function Declare"
				},
				{
					"line": 898,
					"column": 25,
					"label": "pj_caching_pool_destroy: Function Declare"
				}
			]
		},
		{
			"path": "pjlib/src/pj/pool_caching.c",
			"bookmarks": [
				{
					"line": 52,
					"column": 24,
					"label": "pj_caching_pool_init: Function Definition"
				},
				{
					"line": 63,
					"column": 0,
					"label": "pj_caching_pool_init: 1.pj_caching_pool::max_capacity  = max_capacity"
				},
				{
					"line": 64,
					"column": 9,
					"label": "pj_caching_pool_init: 2.pj_list_init(cp->used_list)"
				},
				{
					"line": 66,
					"column": 9,
					"label": "pj_caching_pool_init: 3.pj_list_init(&cp->free_list[i]) Loop PJ_CACHING_POOL_ARRAY_SIZE"
				},
				{
					"line": 69,
					"column": 1,
					"label": "pj_caching_pool_init: 4.pocily = &pj_pool_factory_default_policy if policy nullptr"
				},
				{
					"line": 73,
					"column": 2,
					"label": "pj_caching_pool_init: 5.pj_caching_pool::factory::create_pool = &cpool_create_pool"
				},
				{
					"line": 74,
					"column": 2,
					"label": "pj_caching_pool_init: 6.pj_caching_pool::factory::release_pool = &cpool_release_pool"
				},
				{
					"line": 75,
					"column": 2,
					"label": "pj_caching_pool_init: 7.pj_caching_pool::factory::dump_status = &cpool_dump_status"
				},
				{
					"line": 76,
					"column": 26,
					"label": "pj_caching_pool_init: 8.pj_caching_pool::factory::on_block_alloc = &cpool_on_block_alloc"
				},
				{
					"line": 77,
					"column": 26,
					"label": "pj_caching_pool_init: 9.pj_caching_pool::factory::on_block_free = &cpool_on_block_free"
				},
				{
					"line": 79,
					"column": 20,
					"label": "pj_caching_pool_init: 10.pj_pool_create_on_buf(\"cachingpool\", cp->pool_buf, sizeof(cp->pool_buf))"
				},
				{
					"line": 118,
					"column": 26,
					"label": "cpool_create_pool: Function Definition(Implement pj_pool_factory::create_pool)"
				},
				{
					"line": 130,
					"column": 19,
					"label": "cpool_create_pool: 1.pj_lock_acquire(cp->lock) "
				},
				{
					"line": 142,
					"column": 0,
					"label": "cpool_create_pool: 2.initial_size = pool_sizes[idx] found "
				},
				{
					"line": 164,
					"column": 21,
					"label": "cpool_create_pool: 3.pj_pool_create_int(&cp->factory, name, initial_size, increment_size, callback) if idx == PJ_CACHING_POOL_ARRAY_SIZE ||  pj_list_empty(free_list[idx])"
				},
				{
					"line": 173,
					"column": 12,
					"label": "cpool_pool_create: 4.pool = (pj_pool_t *)cp->free_list[idx].next && pj_list_erase(pool)"
				},
				{
					"line": 177,
					"column": 3,
					"label": "cpool_create_pool: 5.pj_pool_init_int(pool, name, increment_size, callback)"
				},
				{
					"line": 181,
					"column": 12,
					"label": "cpool_create_pool: 6.cp->capacity -= pj_pool_get_capacity(pool)"
				},
				{
					"line": 190,
					"column": 1,
					"label": "cpool_create_pool: 7.pj_list_insert_before(&cp->used_list, pool)"
				},
				{
					"line": 193,
					"column": 1,
					"label": "cpool_create_pool: 8.pool->factory_data = (void *)(pj_size_t) idx;"
				},
				{
					"line": 196,
					"column": 1,
					"label": "cpool_create_pool: 9.++cp->used_count;"
				},
				{
					"line": 198,
					"column": 1,
					"label": "cpool_create_pool: 10.pj_lock_release(cp->lock)"
				},
				{
					"line": 202,
					"column": 25,
					"label": "cpool_release_pool: Function Definition(Implement pj_pool_factory::release_pool)"
				},
				{
					"line": 223,
					"column": 1,
					"label": "cpool_release_pool: 1.pj_list_erase(pool) erase pool node in cp->used_list"
				},
				{
					"line": 237,
					"column": 0,
					"label": "cpool_release_pool: 2.pj_pool_destroy_int(pool) if pool_capacity > pool_sizes[PJ_CAHCING_POOL_ARRAY_SIZE] or cp->capacity + pool_capacity > cp->max_capacity"
				},
				{
					"line": 246,
					"column": 17,
					"label": "cpool_release_pool: 3.pj_pool_reset(pool) "
				},
				{
					"line": 263,
					"column": 18,
					"label": "cpool_release_pool: 4.pj_list_insert_after(&cp->free_list[i], pool) and cp->capacity += pool_capacity"
				},
				{
					"line": 269,
					"column": 29,
					"label": "cpool_dump_status: Function Definition(Implement pj_pool_factory::dump_status)"
				},
				{
					"line": 309,
					"column": 37,
					"label": "cpool_on_block_alloc: Function Definition(Implement pj_pool_factory::on_block_alloc)"
				},
				{
					"line": 326,
					"column": 24,
					"label": "cpool_on_block_free: Function Definition(Implement pj_pool_factory::on_block_free)"
				}
			]
		},
		{
			"path": "pjlib/src/pj/pool.c",
			"bookmarks": [
				{
					"line": 48,
					"column": 33,
					"label": "pj_pool_create_block: Function Definition"
				},
				{
					"line": 90,
					"column": 32,
					"label": "pj_pool_allocate_find: Function Definition"
				},
				{
					"line": 92,
					"column": 3,
					"label": "pj_pool_allocate_find: 1.pj_pool_block *block = pool->block_list.next"
				},
				{
					"line": 99,
					"column": 0,
					"label": "pj_pool_allocate_find: 2.void *p = pj_pool_alloc_from_block(block, size) in Loop"
				},
				{
					"line": 111,
					"column": 0,
					"label": "pj_pool_allocate_find: 3.(*pool->callback)(pool, size) called if pool->increment_size == 0"
				},
				{
					"line": 120,
					"column": 13,
					"label": "pj_pool_allocate_find: 4.pj_size_t block_size calculate"
				},
				{
					"line": 137,
					"column": 10,
					"label": "pj_pool_allocate_find: 5.pj_pool_block *block = pj_pool_create_block(pool, block_size)"
				},
				{
					"line": 141,
					"column": 2,
					"label": "pj_pool_allocate_find: 6.void *p = pj_pool_alloc_from_block(block, size)"
				},
				{
					"line": 180,
					"column": 30,
					"label": "pj_pool_create_int: Function Definition"
				},
				{
					"line": 192,
					"column": 2,
					"label": "pj_pool_create_int: 1.initial_size >= sizeof(pj_pool_t) + sizeof(pj_pool_block) (format buffer to pj_pool_t and initialize pj_pool_block)"
				},
				{
					"line": 200,
					"column": 0,
					"label": "pj_pool_create_int: 2.pj_uint8_t *buffer = (pj_uint8_t *)(*f->policy.block_alloc)(f, initial_size)"
				},
				{
					"line": 205,
					"column": 1,
					"label": "pj_pool_create_int: 3.pj_pool_t *pool = (pj_pool_t*)buffer"
				},
				{
					"line": 212,
					"column": 1,
					"label": "pj_pool_create_int: 4.pj_pool_block*block = (pj_pool_block *)(buffer + sizeof(*pool))"
				},
				{
					"line": 213,
					"column": 1,
					"label": "pj_pool_create_int: 5.block->buf = ((unsigned char *)block) + sizeof(pj_pool_block)"
				},
				{
					"line": 214,
					"column": 1,
					"label": "pj_pool_create_int: 6.block->end = buffer + initial_size"
				},
				{
					"line": 217,
					"column": 1,
					"label": "pj_pool_create_int: 7.block->cur = ALIGN_PTR(block->buf, PJ_POOL_ALIGNMENT)"
				},
				{
					"line": 219,
					"column": 10,
					"label": "pj_pool_create_int: 8.pj_list_insert_after(&pool->block_list, block)"
				},
				{
					"line": 221,
					"column": 10,
					"label": "pj_pool_create_pool: 11.pj_pool_init_int(pool, name, increment_size, callback)"
				},
				{
					"line": 235,
					"column": 22,
					"label": "reset_pool: Function Definition"
				},
				{
					"line": 269,
					"column": 22,
					"label": "pj_pool_reset: Function Definition"
				},
				{
					"line": 275,
					"column": 20,
					"label": "pj_pool_reset: 1.reset_pool(pool) called."
				},
				{
					"line": 281,
					"column": 28,
					"label": "pj_pool_destroy_int: Function Definition"
				}
			]
		},
		{
			"path": "pjlib/src/pj/pool_buf.c",
			"bookmarks": [
				{
					"line": 79,
					"column": 40,
					"label": "pj_pool_create_on_buf: Function Definition"
				}
			]
		},
		{
			"path": "pjlib/src/pj/pool_policy_malloc.c",
			"bookmarks": [
				{
					"line": 29,
					"column": 18,
					"label": "pool_policy_malloc.c: #include \"pool_signature.h\""
				},
				{
					"line": 32,
					"column": 32,
					"label": "default_block_alloc: Function Definition(Implement pj_pool_factory_policy::block_alloc)"
				},
				{
					"line": 40,
					"column": 0,
					"label": "default_block_alloc: 1.factory->on_block_alloc(factory, size) called if factory->on_block_alloc != nullptr"
				},
				{
					"line": 45,
					"column": 3,
					"label": "default_block_alloc: 2.void *p = malloc(size + (SIG_SIZE << 1)) "
				},
				{
					"line": 49,
					"column": 3,
					"label": "default_block_alloc: 3.factory->on_block_free(factory_ size) called if malloc failed."
				},
				{
					"line": 54,
					"column": 5,
					"label": "default_block_alloc: 4.APPLY_SIG(p, size) called if malloc success."
				},
				{
					"line": 60,
					"column": 19,
					"label": "default_block_free: Function Definition(Implement pj_pool_factory_policy::block_free)"
				},
				{
					"line": 63,
					"column": 3,
					"label": "default_block_free: 1.PJ_CHECK_STACK() "
				},
				{
					"line": 66,
					"column": 3,
					"label": "default_block_free: 2.factory->on_block_free(factory, size) called if factory->on_block_free != nullptr "
				},
				{
					"line": 71,
					"column": 8,
					"label": "default_block_free: 2.REMOVE_SIG(mem, size)"
				},
				{
					"line": 77,
					"column": 8,
					"label": "default_block_free: 4.free(mem) called "
				},
				{
					"line": 80,
					"column": 27,
					"label": "default_pool_callback: Function Definition(Implement pj_pool_factory_policy::callback)"
				},
				{
					"line": 89,
					"column": 46,
					"label": "pj_pool_factory_policy pj_pool_factory_default_policy: Global Value Definition(PJ_DEF_DATA)"
				}
			]
		},
		{
			"path": "pjlib/src/pj/pool_policy_new.cpp",
			"bookmarks": [
				{
					"line": 86,
					"column": 41,
					"label": "pj_pool_factory_policy pj_pool_factory_default_policy: Global Value Definition(PJ_DEF_DATA)"
				}
			]
		},
		{
			"path": "pjlib/include/pj/pool_i.h",
			"bookmarks": [
				{
					"line": 40,
					"column": 30,
					"label": "pj_pool_alloc_from_block: Function Definition"
				},
				{
					"line": 57,
					"column": 23,
					"label": "pj_pool_alloc: Function Definition"
				},
				{
					"line": 59,
					"column": 27,
					"label": "pj_pool_alloc: 1.void *ptr = pj_pool_alloc_from_block(pool->block_list.next, size)"
				},
				{
					"line": 61,
					"column": 23,
					"label": "pj_pool_alloc: 2.ptr = pj_pool_allocate_find(pool, size) if ptr == nullptr"
				},
				{
					"line": 79,
					"column": 23,
					"label": "pj_pool_create: Function Definition"
				},
				{
					"line": 85,
					"column": 27,
					"label": "pj_pool_create: 1.(*f->create_pool)(f, name, initial_size, increment_size, callback)"
				},
				{
					"line": 88,
					"column": 22,
					"label": "pj_pool_release: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia/wave.h",
			"bookmarks": [
				{
					"line": 90,
					"column": 16,
					"label": "struct pjmedia_wave_hdr: Struct Definition"
				},
				{
					"line": 97,
					"column": 1,
					"label": "pjmedia_wave_hdr::riff_hdr"
				},
				{
					"line": 109,
					"column": 1,
					"label": "pjmedia_wave_hdr::fmt_hdr"
				},
				{
					"line": 115,
					"column": 9,
					"label": "pjmedia_wave_hdr::data_hdr"
				},
				{
					"line": 127,
					"column": 24,
					"label": "struct pjmedia_wave_subchunk: Struct Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/sound_port.c",
			"bookmarks": [
				{
					"line": 36,
					"column": 17,
					"label": "struct pjmedia_snd_port: Struct Definition"
				},
				{
					"line": 74,
					"column": 23,
					"label": "play_cb: Function Definition"
				},
				{
					"line": 224,
					"column": 26,
					"label": "start_sound_device: Function Definition"
				},
				{
					"line": 443,
					"column": 35,
					"label": "pjmedia_snd_port_create_player: Function Definition"
				},
				{
					"line": 455,
					"column": 1,
					"label": "pjmedia_snd_port_create_player: 1.pjmedia_snd_port_param_default(&param)"
				},
				{
					"line": 461,
					"column": 34,
					"label": "pjmedia_snd_port_create_player: 2.pjmedia_aud_dev_default_param(dev_id, &param.base)"
				},
				{
					"line": 474,
					"column": 3,
					"label": "pjmedia_snd_port_create_player: 3.pjmedia_snd_port_create2(pool, &snd_port_param, p_port)"
				},
				{
					"line": 481,
					"column": 32,
					"label": "pjmedia_snd_port_create2: Function Definition"
				},
				{
					"line": 491,
					"column": 8,
					"label": "pjmedia_snd_port_create2: 1.snd_port = PJ_POOL_ZALLOC_T(pool, pjmedia_snd_port) and initilize snd_port_param"
				},
				{
					"line": 510,
					"column": 19,
					"label": "pjmedia_snd_port_create2: 2.pjmedia_clock_src_init(&snd_port->cap_clocksrc, PJMEDIA_TYPE_AUDIO, snd_port->clock_rate, ptime_usec)"
				},
				{
					"line": 519,
					"column": 19,
					"label": "pjmedia_snd_port_create2: 3.start_sound_device(pool, snd_port)"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia/sound_port.h",
			"bookmarks": [
				{
					"line": 81,
					"column": 28,
					"label": "struct pjmedia_snd_port_param: Struct Definition(Inherit pjmedia_aud_param)"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/transport_udp.c",
			"bookmarks": [
				{
					"line": 185,
					"column": 37,
					"label": "pjmedia_transport_udp_create: Function Definition"
				},
				{
					"line": 212,
					"column": 38,
					"label": "pjmedia_transport_udp_create3: Function Definition"
				},
				{
					"line": 265,
					"column": 29,
					"label": "pjmedia_transport_udp_create3: .pjmedia_transport_udp_attach(endpt, name, &si, options, p_tp)"
				},
				{
					"line": 280,
					"column": 38,
					"label": "pjmedia_transport_udp_attach: Function Definition"
				},
				{
					"line": 298,
					"column": 2,
					"label": "pjmedia_transport_udp_attach: 1.ioqueue = pjmedia_endpt_get_ioqueue(endpt)"
				},
				{
					"line": 692,
					"column": 25,
					"label": "tp_attach: Function Definition"
				},
				{
					"line": 1000,
					"column": 34,
					"label": "transport_media_create: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia/transport.h",
			"bookmarks": [
				{
					"line": 303,
					"column": 21,
					"label": "struct pjmedia_transport_op: Struct Definition"
				},
				{
					"line": 310,
					"column": 1,
					"label": "pjmedia_transport_op::get_info: Function Point Declare"
				},
				{
					"line": 323,
					"column": 7,
					"label": "pjmedia_transport_op::attach: Function Point Declare"
				},
				{
					"line": 346,
					"column": 22,
					"label": "pjmedia_transport_op::detach: Function Point Declare"
				},
				{
					"line": 356,
					"column": 19,
					"label": "pjmedia_transport_op::send_rtp: Function Point Declare"
				},
				{
					"line": 367,
					"column": 20,
					"label": "pjmedia_transport_op::send_rtcp: Function Point Declare"
				},
				{
					"line": 379,
					"column": 22,
					"label": "pjmedia_transport_op::send_rtcp2: Function Point Declare"
				},
				{
					"line": 391,
					"column": 22,
					"label": "pjmedia_transport_op::media_create: Function Point Declare"
				},
				{
					"line": 404,
					"column": 23,
					"label": "pjmedia_transport_op::encode_sdp: Function Point Declare"
				},
				{
					"line": 417,
					"column": 26,
					"label": "pjmedia_transport_op::media_start: Function Point Declare"
				},
				{
					"line": 429,
					"column": 22,
					"label": "pjmedia_transport_op::media_stop: Function Point Declare"
				},
				{
					"line": 437,
					"column": 23,
					"label": "pjmedia_transport_op::simulate_lost: Function Point Declare"
				},
				{
					"line": 447,
					"column": 23,
					"label": "pjmedia_transport_op::destroy: Function Point Declare"
				},
				{
					"line": 458,
					"column": 39,
					"label": "pjmedia_transport_op::attach2: Function Point Declare"
				},
				{
					"line": 500,
					"column": 16,
					"label": "struct pjmedia_transport: Struct Definition"
				},
				{
					"line": 506,
					"column": 25,
					"label": "pjmedia_transport::type: pjmedia_transport_type type"
				},
				{
					"line": 509,
					"column": 15,
					"label": "pjmedia_transport::op: pjmedia_transport_op *op"
				},
				{
					"line": 766,
					"column": 37,
					"label": "pjmedia_transport_attach: Function Definition"
				}
			]
		},
		{
			"path": "pjsip/src/pjsua-lib/pjsua_vid.c",
			"bookmarks": [
				{
					"line": 1700,
					"column": 26,
					"label": "call_add_video: Function Definition"
				},
				{
					"line": 1740,
					"column": 23,
					"label": "call_add_video: .pjsua_call_media_init() called "
				},
				{
					"line": 1816,
					"column": 31,
					"label": "call_modify_video: Function Definition"
				},
				{
					"line": 1894,
					"column": 25,
					"label": "call_modify_video: .pjsua_call_media_init"
				}
			]
		},
		{
			"path": "pjsip/include/pjsip/sip_transport.h",
			"bookmarks": [
				{
					"line": 791,
					"column": 22,
					"label": "struct pjsip_transport: Struct Definition"
				}
			]
		},
		{
			"path": "pjsip/include/pjsip/sip_transaction.h",
			"bookmarks": [
				{
					"line": 79,
					"column": 19,
					"label": "struct pjsip_transaction: Struct Definition"
				}
			]
		},
		{
			"path": "pjsip-apps/src/samples/aviplay.c",
			"bookmarks": [
				{
					"line": 90,
					"column": 18,
					"label": "struct avi_port_t: Struct Definition"
				},
				{
					"line": 181,
					"column": 14,
					"label": "aviplay: Function Definition"
				},
				{
					"line": 198,
					"column": 25,
					"label": "aviplay: 1.pjmedia_avi_player_create_streams(pool, fname, 0, &avi_streams)"
				},
				{
					"line": 204,
					"column": 28,
					"label": "aviplay: 2.pjmedia_avi_stream *vid_stream = pjmedia_avi_streams_get_stream_by_media(avi_streams, 0, PJMEDIA_TYPE_VIDEO)"
				},
				{
					"line": 207,
					"column": 0,
					"label": "aviplay: 3.pjmedia_port *vid_port = pjmedia_avi_stream_get_port(vid_stream)"
				},
				{
					"line": 212,
					"column": 27,
					"label": "aviplay: 4.pjmedia_vid_dev_default_param(pool, PJMEDIA_VID_DEFAULT_RENDER_DEV, &param.vidparam)"
				},
				{
					"line": 222,
					"column": 4,
					"label": "aviplay: 5.pjmedia_format_get_video_format_detail(&vid_port->info.fmt, PJ_TRUE)"
				},
				{
					"line": 224,
					"column": 18,
					"label": "aviplay: 6.pjmedia_format_init_video(&fmt, fmt.id, w, h, fps.num, fps.denum)"
				},
				{
					"line": 229,
					"column": 27,
					"label": "pjmedia_get_video_format_info: Function Definition"
				},
				{
					"line": 258,
					"column": 0,
					"label": "aviplay: 8.pjmedia_vid_codec_mgr_find_codecs_by_id"
				},
				{
					"line": 266,
					"column": 8,
					"label": "aviplay: 9.pjmedia_vid_codec_mgr_get_default_param(NULL, codec_info, &codec_param)"
				},
				{
					"line": 272,
					"column": 26,
					"label": "aviplay: 10.pjmedia_format_copy(&codec_param.enc_fmt, &param.vidparam.fmt)"
				},
				{
					"line": 274,
					"column": 24,
					"label": "aviplay: 11.pjmedia_vid_dev_get_info(param.vidparam.rend_id, &rdr_info)"
				},
				{
					"line": 287,
					"column": 15,
					"label": "aviplay: 12.pjmedia_vid_codec_mgr_alloc_codec(NULL, codec_info, codec)"
				},
				{
					"line": 293,
					"column": 28,
					"label": "aviplay: 13.pjmedia_vid_codec_init(codec, pool)"
				},
				{
					"line": 298,
					"column": 30,
					"label": "aviplay: 14.pjmedia_format_copy(&codec_param.dec_fmt, &param.vidparam.fmt)"
				},
				{
					"line": 301,
					"column": 27,
					"label": "aviplay: 15.pjmedia_vid_codec_open(codec, &codec_param)"
				},
				{
					"line": 315,
					"column": 29,
					"label": "aviplay: 16.pjmedia_port_info_init2(&codec_port.info, &port_name, 0x1234, PJMEDIA_DIR_ENCODING, &codec_param.dec_fmt)"
				},
				{
					"line": 328,
					"column": 24,
					"label": "aviplay: 17.pjmedia_port codec_port.get_frame = &codec_get_frame"
				},
				{
					"line": 340,
					"column": 29,
					"label": "aviplay: 18.pjmedia_converter_create(NULL, pool, &conv_param, &codec_port_data.conv)"
				},
				{
					"line": 347,
					"column": 29,
					"label": "aviplay: 19.pjmedia_vid_port_create(pool, &param, &renderer)"
				},
				{
					"line": 352,
					"column": 27,
					"label": "aviplay: 20.pjmedia_vid_port_connect(renderer, &codec_port, PJ_FLASE)"
				},
				{
					"line": 354,
					"column": 2,
					"label": "aviplayer: pjmedia_vid_port_create"
				},
				{
					"line": 370,
					"column": 31,
					"label": "aviplay: 21.aud_stream = pjmedia_avi_streams_get_stream_by_media(avi_streams, 0, PJMEDIA_TYPE_AUDIO)"
				},
				{
					"line": 373,
					"column": 26,
					"label": "aviplay: 22.pjmedia_avi_stream_get_port(aud_stream)"
				},
				{
					"line": 377,
					"column": 26,
					"label": "aviplay: 23.pjmedia_snd_port_create_player()"
				},
				{
					"line": 394,
					"column": 33,
					"label": "aviplay: 24.pjmedia_snd_port_connect(snd_port, aud_port)"
				},
				{
					"line": 407,
					"column": 10,
					"label": "aviplay: 25.pjmedia_vid_port_set_cb(renderer, &cb, &avi_port)"
				},
				{
					"line": 410,
					"column": 26,
					"label": "aviplay: 26.pjmedia_event_subscribe(NULL, &avi_event_cb, &avi_port, renderer)"
				},
				{
					"line": 460,
					"column": 15,
					"label": "main_func: Function Definition"
				},
				{
					"line": 489,
					"column": 15,
					"label": "main_func: 1.pjmedia_video_format_mgr_create(pool, 64, 0, NULL)"
				},
				{
					"line": 490,
					"column": 3,
					"label": "main_func: 2.,pjmedia_converter_mgr_create(pool, NULL)"
				},
				{
					"line": 491,
					"column": 21,
					"label": "main_func: 3.pjmedia_event_mgr_create(pool, 0, NULL)"
				},
				{
					"line": 492,
					"column": 25,
					"label": "main_func: 4.pjmedia_vid_codec_mgr_create(pool, NULL)"
				},
				{
					"line": 494,
					"column": 25,
					"label": "main_func: 5.pjmedia_vid_dev_subsys_init（&cp.factory）"
				},
				{
					"line": 500,
					"column": 31,
					"label": "main_func: 6.pjmedia_aud_subsys_init(&cp.factory)"
				},
				{
					"line": 507,
					"column": 2,
					"label": "main_func: 7.pjmedia_codec_openh264_vid_init(NULL, &cp.factory)"
				},
				{
					"line": 515,
					"column": 24,
					"label": "main_func: 7.pjmedia_codec_ffmpeg_vid_init(NULL, &cp.factory)"
				},
				{
					"line": 522,
					"column": 0,
					"label": "main_func: 8.aviplay(pool, argv[1])"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia/event.h",
			"bookmarks": [
				{
					"line": 162,
					"column": 19,
					"label": "struct pjmedia_event: Struct Definition"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia/converter.h",
			"bookmarks": [
				{
					"line": 114,
					"column": 21,
					"label": "struct pjmedia_converter: Struct Definition"
				},
				{
					"line": 119,
					"column": 21,
					"label": "pjmedia_converter::op: pjmedia_converter_op *op"
				},
				{
					"line": 127,
					"column": 22,
					"label": "struct pjmedia_converter_factory_op: Struct Definition"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia-codec/openh264.h",
			"bookmarks": [
				{
					"line": 49,
					"column": 33,
					"label": "pjmedia_codec_openh264_vid_init: Function Definition"
				},
				{
					"line": 58,
					"column": 40,
					"label": "pjmedia_codec_openh264_vid_deinit: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia/vid_port.h",
			"bookmarks": [
				{
					"line": 41,
					"column": 29,
					"label": "struct pjmedia_vid_port_param: Struct Definition"
				},
				{
					"line": 46,
					"column": 30,
					"label": "pjmedia_vid_port_param::vidparam: pjmedia_vid_dev_param vidparam"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/vid_port.c",
			"bookmarks": [
				{
					"line": 74,
					"column": 13,
					"label": "struct pjmedia_vid_port: Struct Definition"
				},
				{
					"line": 80,
					"column": 9,
					"label": "pjmedia_vid_port::strm: pjmedia_vid_dev_stream strm"
				},
				{
					"line": 81,
					"column": 9,
					"label": "pjmedia_vid_port::strm_cb: pjmedia_vid_dev_cb strm_cb"
				},
				{
					"line": 488,
					"column": 33,
					"label": "pjmedia_vid_port_create: Function Definition"
				},
				{
					"line": 518,
					"column": 2,
					"label": "pjmedia_vid_port_create: 1.pjmedia_vid_dev_get_info(cap_id/rend_id, &di)"
				},
				{
					"line": 531,
					"column": 1,
					"label": "pjmedia_vid_port_create: 2.pjmedia_vid_port_param vparam = prm->vidparam//copy"
				},
				{
					"line": 549,
					"column": 0,
					"label": "pjmedia_vid_port_create: 3.vparam.fmt.id = get_match_format_id(prm->vidparam.fmt.id, &di)"
				},
				{
					"line": 578,
					"column": 2,
					"label": "pjmedia_vid_port_create: 4.vp->stream_role = di.has_callback ? ROLE_ACTIVE : ROLE_PASSIVE"
				},
				{
					"line": 592,
					"column": 1,
					"label": "pjmedia_vid_port_create: 5.pjmedia_vid_dev_stream_create(&vparam, &vid_cb, vp, &vp->strm)"
				},
				{
					"line": 605,
					"column": 2,
					"label": "pjmedia_vid_port_create: 6.pjmedia_event_subscribe(NULL, &vidstream_event_cb, vp, vp->strm)"
				},
				{
					"line": 616,
					"column": 3,
					"label": "pjmedia_vid_port_create: 7.create_converter(vp)//using vp->conv.conv_param"
				},
				{
					"line": 634,
					"column": 1,
					"label": "pjmedia_vid_port_create: 8.pjmedia_clock_create2(...,clock_param, enc_clock_cb/dec_clock_cb)//if role active and stream_role PASSTIVE"
				},
				{
					"line": 650,
					"column": 18,
					"label": "pjmedia_vid_port_create: 9.pjmedia_port_info_init2(vid_pasv_port) //vid_pasv_port_get_frame/put_frame register"
				},
				{
					"line": 1073,
					"column": 18,
					"label": "enc_clock_cb: Function Definition"
				},
				{
					"line": 1113,
					"column": 17,
					"label": "dec_clock_cb: Function Definition"
				},
				{
					"line": 1137,
					"column": 27,
					"label": "vidstream_cap_cb: Function Definition"
				},
				{
					"line": 1158,
					"column": 26,
					"label": "vidstream_render_cb: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/videodev.c",
			"bookmarks": [
				{
					"line": 491,
					"column": 35,
					"label": "pjmedia_vid_dev_default_param: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/event.c",
			"bookmarks": [
				{
					"line": 42,
					"column": 21,
					"label": "struct event_queue: Struct Definition"
				},
				{
					"line": 49,
					"column": 21,
					"label": "struct pjmedia_event_mgr: Struct Definition"
				},
				{
					"line": 64,
					"column": 17,
					"label": "pjmedia_event_mgr *event_manager_instance: Static Value Definition"
				},
				{
					"line": 66,
					"column": 32,
					"label": "event_queue_add_event: Function Definition"
				},
				{
					"line": 89,
					"column": 32,
					"label": "event_mgr_distribute_events: Function Definition"
				},
				{
					"line": 130,
					"column": 23,
					"label": "event_worker_thread: Function Definition(pjmedia_event_mgr worker thread)"
				},
				{
					"line": 150,
					"column": 35,
					"label": "pjmedia_event_mgr_create: Function Definition"
				},
				{
					"line": 202,
					"column": 26,
					"label": "pjmedia_event_mgr_destroy: Function Definition"
				},
				{
					"line": 230,
					"column": 24,
					"label": "pjmedia_event_init: Function Definition"
				},
				{
					"line": 242,
					"column": 43,
					"label": "pjmedia_event_subscribe: Function Definition"
				},
				{
					"line": 286,
					"column": 9,
					"label": "pjmedia_event_unsubscribe: Function Definition"
				},
				{
					"line": 325,
					"column": 32,
					"label": "pjmedia_event_publish: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia-codec/ffmpeg_vid_codecs.c",
			"bookmarks": [
				{
					"line": 335,
					"column": 24,
					"label": "h264_preopen: Function Definition"
				},
				{
					"line": 345,
					"column": 34,
					"label": "h246_preopen: 1.pjmedia_vid_codec_h264_parse_fmtp(&ff->param.enc_fmtp, &data->fmtp)"
				},
				{
					"line": 372,
					"column": 32,
					"label": "h264_open: 3.pjmedia_h264_packetizer_create(ff->pool, &pktz_cfg, data->pktz)"
				},
				{
					"line": 378,
					"column": 31,
					"label": "h264_preopen: 3.pjmedia_vid_codec_h264_apply_fmtp(pjmedia_vid_codec_param *param)"
				},
				{
					"line": 590,
					"column": 33,
					"label": "pjmedia_codec_ffmpeg_vid_init: Function Definition"
				},
				{
					"line": 1096,
					"column": 31,
					"label": "open_ffmpeg_codec: Function Definition"
				},
				{
					"line": 1105,
					"column": 24,
					"label": "open_ffmpeg_codec: 1.pjmedia_format_id_to_PixelFormat(ff->param.dec_fmt.id, &pix_fmt)"
				},
				{
					"line": 1112,
					"column": 34,
					"label": "open_ffmpeg_codec: 2.pjmedia_format_get_video_format_detail(&ff->param.enc_fmt, PJ_TRUE)"
				},
				{
					"line": 1240,
					"column": 30,
					"label": "ffmpeg_codec_open: Function Definition(Override pjmedia_vid_codec_op::open)"
				},
				{
					"line": 1248,
					"column": 1,
					"label": "ffmpeg_codec_open: 1.ffmpeg_private *ff = (ffmpeg_private *)(codec->codec_data)"
				},
				{
					"line": 1258,
					"column": 1,
					"label": "ffmpeg_codec_open: 2.open_ffmpeg_codec(ff, ff_mutex)"
				},
				{
					"line": 1263,
					"column": 36,
					"label": "ffmpeg_codec_open: 3.ff->dec_vfi = pjmedia_get_video_format_info(NULL, ff->param.dec_fmt.id)"
				},
				{
					"line": 1277,
					"column": 35,
					"label": "ffmpeg_codec_open: 4.ff->enc_vfi = pjmedia_get_video_format_info(NULL, ff->param.dec_fmt.id)"
				},
				{
					"line": 1291,
					"column": 1,
					"label": "ffmpeg_codec_open: 5.ff->whole = (ff->param.packing == PJMEDIA_VID_PACKING_WHOLE)"
				},
				{
					"line": 1495,
					"column": 35,
					"label": "ffmpeg_codec_encode_begin: Function Definition"
				},
				{
					"line": 1793,
					"column": 29,
					"label": "ffmpeg_codec_decode: Function Definition"
				},
				{
					"line": 1807,
					"column": 23,
					"label": "ffmpeg_codec_decode: 1.ffmpeg_codec_decode_whole(codec, &packets[0], out_size, output) called if ffmpeg_private::whole is true"
				},
				{
					"line": 1822,
					"column": 20,
					"label": "ffmpeg_codec_decode: 2.ffmpeg_unpacketize(codec, packets[i].buf, packets[i].size, ff->dec_buf, ff->dec_buf_size, &whole_len) in Loop"
				},
				{
					"line": 1836,
					"column": 15,
					"label": "ffmpeg_codec_decode: 3.ffmpeg_codec_decode_whole(codec, &whole_frm, out_size, output)"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia-codec/h264_packetizer.h",
			"bookmarks": [
				{
					"line": 73,
					"column": 29,
					"label": "struct pjmedia_h264_packetizer_cfg: Struct Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/vid_codec_util.c",
			"bookmarks": [
				{
					"line": 375,
					"column": 31,
					"label": "pjmedia_vid_codec_h264_parse_fmtp: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/stream.c",
			"bookmarks": [
				{
					"line": 511,
					"column": 24,
					"label": "get_frame: Function Definition"
				},
				{
					"line": 560,
					"column": 11,
					"label": "get_frame: .pjmedia_jbuf_get_frame2"
				},
				{
					"line": 804,
					"column": 23,
					"label": "get_frame_ext: Function Definition"
				},
				{
					"line": 1270,
					"column": 29,
					"label": "put_frame_imp: Function Definition"
				},
				{
					"line": 1531,
					"column": 23,
					"label": "put_frame: Function Definition"
				},
				{
					"line": 1609,
					"column": 0,
					"label": "put_frame: .put_frame_imp(port, &tmp_rebuffer_frame)"
				},
				{
					"line": 1737,
					"column": 12,
					"label": "on_rx_rtp: Function Definition"
				},
				{
					"line": 2113,
					"column": 12,
					"label": "on_rx_rtcp: Function Definition"
				},
				{
					"line": 2135,
					"column": 27,
					"label": "create_channel: Function Definition"
				},
				{
					"line": 2244,
					"column": 35,
					"label": "pjmedia_stream_create: Function Definition"
				},
				{
					"line": 2578,
					"column": 18,
					"label": "pjmedia_stream_create: .create_channel"
				},
				{
					"line": 2657,
					"column": 30,
					"label": "pjmedia_stream_create: .pjmedia_transport_attach2(tp, &att_param)"
				},
				{
					"line": 2953,
					"column": 29,
					"label": "pjmedia_stream_start: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/transport_srtp.c",
			"bookmarks": [
				{
					"line": 132,
					"column": 19,
					"label": "struct crypto_suite: Struct Definition"
				},
				{
					"line": 227,
					"column": 20,
					"label": "struct transport_srtp: Struct Definition"
				},
				{
					"line": 491,
					"column": 32,
					"label": "pjmedia_srtp_init_lib: Function Definition"
				},
				{
					"line": 503,
					"column": 0,
					"label": "pjmedia_srtp_init_lib: 1.srtp_init() "
				},
				{
					"line": 513,
					"column": 3,
					"label": "pjmedia_srtp_init_lib: 2.dtls_init()"
				},
				{
					"line": 673,
					"column": 37,
					"label": "pjmedia_transport_srtp_create: Function Definition"
				},
				{
					"line": 687,
					"column": 18,
					"label": "pjmedia_transport_srtp_create: 1.Check crypto get_crypto_idx(name) crypto_suites[cs_idx].cipher_key_len"
				},
				{
					"line": 704,
					"column": 0,
					"label": "pjmedia_transport_srtp_create: 2.pjmedia_srtp_init_lib(endpt)"
				},
				{
					"line": 709,
					"column": 1,
					"label": "pjmedia_transport_srtp_create: 3.PJ_POOL_ZALLOC_T(pool, transport_srtp) and initialize it"
				},
				{
					"line": 721,
					"column": 0,
					"label": "pjmedia_transport_srtp_create: 4.srtp->setting.crypto[].key initialize by crypto_suites"
				},
				{
					"line": 743,
					"column": 0,
					"label": "pjmedia_transport_srtp_create: 5.pjmedia_srtp_enum_crypto(&srtp->setting.crypto_count, srtp->setting.crypto)"
				},
				{
					"line": 760,
					"column": 1,
					"label": "pjmedia_transport_srtp_create: 6.srtp->base.op = &transport_srtp_op"
				},
				{
					"line": 772,
					"column": 0,
					"label": "pjmedia_transport_srtp_create: 7.pjmedia_srtp_enum_keying(srtp->setting.key_count, srtp->setting.keying)"
				},
				{
					"line": 782,
					"column": 4,
					"label": "pjmedia_transport_srtp_create: 8.sdes_create(srtp, &srtp->all_keying[srtp->all_keying_cnt++])"
				},
				{
					"line": 788,
					"column": 5,
					"label": "pjmedia_transport_srtp_create: 9.dtls_create(srtp, &srtp->all_keying[all_keying_cnt++]"
				},
				{
					"line": 1020,
					"column": 21,
					"label": "start_srtp: Function Definition"
				},
				{
					"line": 1079,
					"column": 29,
					"label": "transport_get_info: Function Definition"
				},
				{
					"line": 1114,
					"column": 30,
					"label": "transport_attach2: Function Definition"
				},
				{
					"line": 1125,
					"column": 0,
					"label": "transport_attach2: 1.if (param->rtp_cb || param->rtp_cb2) do not update rtp_cb if not set, as attach is called by keying method"
				},
				{
					"line": 1143,
					"column": 12,
					"label": "transport_attach2: 2.pjmedia_transport_attach2(srtp->member_tp, &member_param) using rtp_cb2 = srtp_rtp_cb "
				},
				{
					"line": 1161,
					"column": 22,
					"label": "transport_detach: Function Definition"
				},
				{
					"line": 1182,
					"column": 32,
					"label": "transport_send_rtp: Function Definition"
				},
				{
					"line": 1192,
					"column": 0,
					"label": "transport_send_rtp: 1.pjmedia_transport_send_rtp(member_tp, pkt, size) directly if srtp->bypass_srtp"
				},
				{
					"line": 1204,
					"column": 1,
					"label": "transport_send_rtp: 2.srtp_protect(srtp->srtp_tx_ctx, srtp->rtp_tx_buffer, &len)"
				},
				{
					"line": 1275,
					"column": 30,
					"label": "transport_destory: Function Definition"
				},
				{
					"line": 1310,
					"column": 17,
					"label": "srtp_rtp_cb: Function Definition"
				},
				{
					"line": 1349,
					"column": 33,
					"label": "srtp_rtp_cb: .pjmedia_transport_send_rtp(srtp->keying[i], pkt, size)(override dtls_on_recv_rtp)"
				},
				{
					"line": 1435,
					"column": 14,
					"label": "srtp_rtcp_cb: Function Definition"
				},
				{
					"line": 1479,
					"column": 28,
					"label": "transport_media_create: Function Definition"
				},
				{
					"line": 1499,
					"column": 1,
					"label": "transport_media_create: 1.srtp->bypass_srtp check"
				},
				{
					"line": 1518,
					"column": 3,
					"label": "transport_media_create: 2.pjmedia_transport_media_create(srtp->member_tp, sdp_pool, member_tp_option, sdp_remote, media_index))"
				},
				{
					"line": 1539,
					"column": 0,
					"label": "transport_media_create: 3.pjmedia_transport_media_create(srtp->keying[i], sdp_pool, options, sdp_remote, media_index)"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/transport_srtp_sdes.c",
			"bookmarks": [
				{
					"line": 72,
					"column": 24,
					"label": "sdes_create: Function Definition"
				},
				{
					"line": 82,
					"column": 3,
					"label": "sdes_create: 1.(pjmedia_transport *)sdes->user_data = srtp"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/transport_srtp_dtls.c",
			"bookmarks": [
				{
					"line": 143,
					"column": 26,
					"label": "dtls_init: Function Definition"
				},
				{
					"line": 149,
					"column": 1,
					"label": "dtls_init: 1.pj_ssl_cipher_get_availables(ciphers, &cipher_num) make sure OpenSSL library has ben initialized"
				},
				{
					"line": 155,
					"column": 0,
					"label": "dtls_init: 2.ssl_generate_cert(&dtls_cert, &dtls_priv_key)"
				},
				{
					"line": 166,
					"column": 19,
					"label": "dtls_deinit: Function Definition"
				},
				{
					"line": 179,
					"column": 20,
					"label": "dtls_create: Function Definition"
				},
				{
					"line": 258,
					"column": 31,
					"label": "ssl_get_fingerprint: Function Definition"
				},
				{
					"line": 265,
					"column": 0,
					"label": "ssl_get_fingerprint: 1.X509_digest(cert, is_sha256 ? EVP_sha256() : EVP_sha1(), tmp, &len)"
				},
				{
					"line": 284,
					"column": 28,
					"label": "ssl_generate_cert: Function Definition"
				},
				{
					"line": 374,
					"column": 24,
					"label": "ssl_create: Function Definition"
				},
				{
					"line": 381,
					"column": 1,
					"label": "ssl_create: 1.if (ds->ossl_ssl) return PJ_SUCCESS /*Check if it is already instantiated*/"
				},
				{
					"line": 385,
					"column": 2,
					"label": "ssl_create: 2.ctx = SSL_CTX_new(DTLS_method())"
				},
				{
					"line": 552,
					"column": 27,
					"label": "ssl_match_fingerprint: Function Definition"
				},
				{
					"line": 721,
					"column": 26,
					"label": "ssl_handshake: Function Definition"
				},
				{
					"line": 727,
					"column": 1,
					"label": "ssl_handshake: 1.ssl_create(ds)"
				},
				{
					"line": 902,
					"column": 30,
					"label": "ssl_on_recv_packet: Function Definition"
				},
				{
					"line": 937,
					"column": 22,
					"label": "on_ice_complete2: Function Definition"
				},
				{
					"line": 951,
					"column": 0,
					"label": "on_ice_complete2: 1.ssl_handshake(ds)"
				},
				{
					"line": 968,
					"column": 28,
					"label": "dtls_on_recv_rtp: Function Definition"
				},
				{
					"line": 1018,
					"column": 15,
					"label": "dtls_on_recv_rtp: 1.if (!ds->use_ice && !ds->nego_completed) { pjmedia_transport_attach2(&ds->srtp->base, &ap) })"
				},
				{
					"line": 1041,
					"column": 28,
					"label": "dtls_on_recv_rtp: 2.ssl_handshake(ds) for DTLS_SETUP_PASSIVE"
				},
				{
					"line": 1047,
					"column": 0,
					"label": "dtls_on_recv_rtp: 3.ssl_on_recv_packet(ds, pkt, size)"
				},
				{
					"line": 1051,
					"column": 28,
					"label": "dtls_media_create: Function Definition"
				},
				{
					"line": 1129,
					"column": 26,
					"label": "dtls_encode_sdp: Function Definition"
				},
				{
					"line": 1515,
					"column": 37,
					"label": "pjmedia_transport_srtp_dtls_get_fingerprint: Function Definition"
				},
				{
					"line": 1533,
					"column": 42,
					"label": "pjmedia_transport_srtp_dtls_start_nego: Function Definition"
				}
			]
		},
		{
			"path": "pjlib/include/pj/ssl_sock.h",
			"bookmarks": [
				{
					"line": 305,
					"column": 17,
					"label": "enum pj_ssl_cipher: Enum Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/session.c",
			"bookmarks": [
				{
					"line": 85,
					"column": 26,
					"label": "pjmedia_session_create: Function Definition"
				},
				{
					"line": 121,
					"column": 24,
					"label": "pjmedia_session_create: .pjmedia_stream_create"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/jbuf.c",
			"bookmarks": [
				{
					"line": 87,
					"column": 16,
					"label": "struct pjmedia_jbuf: Struct Definition"
				},
				{
					"line": 561,
					"column": 33,
					"label": "pjmedia_jbuf_create: Function Definition"
				},
				{
					"line": 598,
					"column": 32,
					"label": "pjmedia_jbuf_set_ptime"
				},
				{
					"line": 617,
					"column": 33,
					"label": "pjmedia_jbuf_set_fixed: Function Definition"
				},
				{
					"line": 634,
					"column": 31,
					"label": "pjmedia_jbuf_set_adaptive: Function Definition"
				},
				{
					"line": 653,
					"column": 33,
					"label": "pjmedia_jbuf_set_discard: Function Definition"
				},
				{
					"line": 677,
					"column": 34,
					"label": "pjmedia_jbuf_rest: Function Definition"
				},
				{
					"line": 694,
					"column": 40,
					"label": "pjmedia_jbuf_destroy: Function Definition"
				},
				{
					"line": 967,
					"column": 30,
					"label": "pjmedia_jbuf_put_frame: Function Definition"
				},
				{
					"line": 1057,
					"column": 30,
					"label": "pjmedia_jbuf_get_frame: Function Definition"
				},
				{
					"line": 1154,
					"column": 39,
					"label": "pjmedia_jbuf_get_state: Function Definition"
				},
				{
					"line": 1181,
					"column": 26,
					"label": "pjmedia_jbuf_peek_frame: Function Definition"
				},
				{
					"line": 1204,
					"column": 37,
					"label": "pjmedia_jbuf_remove_frame: Function Definition"
				}
			]
		},
		{
			"path": "pjmedia/src/pjmedia/vid_stream.c",
			"bookmarks": [
				{
					"line": 106,
					"column": 21,
					"label": "pjmedia_vid_stream: Struct Definition"
				},
				{
					"line": 1481,
					"column": 34,
					"label": "pjmedia_vid_stream_create: Function Definition"
				},
				{
					"line": 1757,
					"column": 29,
					"label": "pjmedia_vid_stream_create: .pjmedia_transport_attach2(tp, &att_param)"
				}
			]
		},
		{
			"path": "pjmedia/include/pjmedia/transport_udp.h",
			"bookmarks": [
				{
					"line": 144,
					"column": 46,
					"label": "pjmedia_transport_udp_attach: Function Definition"
				}
			]
		}
	]
}